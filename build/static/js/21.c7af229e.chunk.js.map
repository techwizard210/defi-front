{"version":3,"sources":["pages/Competition.js","components/GameItem.js","assets/img/Cup/goldcup.png","assets/img/Cup/silvercup.png","assets/img/Cup/bronzecup.png","assets/img/Profile2.jpg"],"names":["Competition","props","wipeSignatureAndReRequest","id","useParams","_useWeb3React","useWeb3React","chainId","account","classes","useStyles","ranking","playClasses","playGameSpecific","compClasses","competitions","_useState","useState","_useState2","_slicedToArray","compLeaderboardData","setCompLeaderboardData","_useState3","_useState4","compData","setCompData","_useState5","_useState6","selectedIndex","setSelectedIndex","_useState7","_useState8","enrolled","setEnrolled","_useState9","_useState10","participantCount","setParticipantCount","_useState11","_useState12","playerRank","setPlayerRank","prizeClassMapping","useEffect","fetchCompetitionData","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","url","resp","competitionData","oneDay","today","standingsData","leaderboard","orderedScores","wrap","_context","prev","next","concat","walletAuthFetchWithSigPrompt","sent","Date","daysUntilStart","Math","round","startDate","daysUntilEnd","endDate","formattedStart","moment","format","formattedEnd","stats","standings","_","orderBy","t0","console","log","stop","apply","arguments","handleListItemClick","event","index","ActivateGame","item","History","push","compSignUp","_ref2","_callee2","compId","_context2","mode","_x","infoRow","label","value","_jsxs","Grid","container","direction","justifyContent","className","CompInfoRow","style","marginBottom","children","_jsx","lg","md","sm","xs","uuid_v4","CompetitionList","_compData$prizes","_compData$includedGam","alignItems","Suspense","fallback","Spinner","Card","CompWrapper","backgroundImage","bannerImageUrl","CardContent","CompContent","background","CompTitle","name","CompActiveDates","CompLogo","src","competitionLogoUrl","alt","textAlign","PrizePoolHeading","prizes","length","sort","a","b","order","map","prize","prizeIndex","PrizeRow","position","reward","CompInfoHeading","CompGamesWrapper","spacing","includedGames","perGameContainer","GameItem","ActiveGame","sponsors","CardActions","CompActions","ended","EnrolledText","Button","size","CompSignUpButton","onClick","MobileCompetitionList","_compData$prizes2","_compData$includedGam2","CompGamesHeader","width","_Fragment","BrowserView","marginTop","padding","clsx","marginBottom5","List","dense","rankList","height","data","component","ListItem","button","selected","ListItemIcon","leaderboardCupItem","gold","silver","bronze","ListItemText","primary","leaderboardRankItem","ListAvatarItem","playerAvatar","avatar","avatarWidth","leaderboardUserAddress","playerName","leaderboardScore","score","MobileView","parentVideo","keyboard","DesktopMacIcon","joystick","SportsEsportsIcon","mouse","MouseIcon","process","img","title"],"mappings":"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","file":"static/js/21.c7af229e.chunk.js","sourcesContent":["import { useState, useEffect, Suspense } from 'react';\r\nimport { v4 as uuid_v4 } from 'uuid';\r\nimport { useWeb3React } from '@web3-react/core';\r\nimport clsx from 'clsx';\r\nimport _ from 'lodash';\r\n\r\nimport { BrowserView, MobileView } from 'react-device-detect';\r\n\r\nimport { useParams } from 'react-router-dom';\r\nimport moment from 'moment';\r\n\r\n// ** Import Material-Ui Components\r\nimport Grid from '@material-ui/core/Grid';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport Spinner from '../components/Spinner';\r\nimport GameItem from '../components/GameItem';\r\n\r\nimport { History } from '../theme';\r\n\r\n// ** Import Assets\r\nimport useStyles from '../assets/styles';\r\nimport gold from '../assets/img/Cup/goldcup.png';\r\nimport silver from '../assets/img/Cup/silvercup.png';\r\nimport bronze from '../assets/img/Cup/bronzecup.png';\r\nimport avatar from '../assets/img/Profile2.jpg';\r\n\r\nimport { walletAuthFetchWithSigPrompt } from '../helpers/apiFetchWrappers';\r\n\r\nconst Competition = (props) => {\r\n  const { wipeSignatureAndReRequest } = props;\r\n  const { id } = useParams();\r\n\r\n  const { chainId, account } = useWeb3React();\r\n\r\n  const classes = useStyles.ranking();\r\n  const playClasses = useStyles.playGameSpecific();\r\n  const compClasses = useStyles.competitions();\r\n\r\n  const [compLeaderboardData, setCompLeaderboardData] = useState([]);\r\n  const [compData, setCompData] = useState(null);\r\n  const [selectedIndex, setSelectedIndex] = useState(0);\r\n  const [enrolled, setEnrolled] = useState(false);\r\n  const [participantCount, setParticipantCount] = useState(0);\r\n  const [playerRank, setPlayerRank] = useState(null);\r\n\r\n  const prizeClassMapping = ['first', 'second', 'third'];\r\n\r\n  useEffect(() => {\r\n    const fetchCompetitionData = async () => {\r\n      const url = `Competition/${id}`;\r\n      try {\r\n        const resp = await walletAuthFetchWithSigPrompt(\r\n          url,\r\n          'GET',\r\n          wipeSignatureAndReRequest,\r\n          account,\r\n          null,\r\n          true,\r\n          null\r\n        );\r\n        const competitionData = resp;\r\n\r\n        if (competitionData) {\r\n          const oneDay = 24 * 60 * 60 * 1000;\r\n          const today = new Date();\r\n\r\n          competitionData.daysUntilStart = Math.round(\r\n            today - new Date(competitionData.startDate) / oneDay\r\n          );\r\n          competitionData.daysUntilEnd = Math.round(\r\n            today - new Date(competitionData.endDate) / oneDay\r\n          );\r\n          competitionData.formattedStart = moment(\r\n            competitionData.startDate\r\n          ).format('HH:mm Do MMM');\r\n          competitionData.formattedEnd = moment(competitionData.endDate).format(\r\n            'HH:mm Do MMM (UTC)'\r\n          );\r\n          setCompData(competitionData);\r\n\r\n          const standingsData = competitionData.stats;\r\n          const leaderboard = standingsData.standings;\r\n          setEnrolled(standingsData.enrolled);\r\n          setParticipantCount(standingsData.participantCount);\r\n          setPlayerRank(standingsData.playerRank);\r\n          const orderedScores = _.orderBy(\r\n            leaderboard,\r\n            ['competitionRank'],\r\n            ['asc']\r\n          );\r\n          setCompLeaderboardData(orderedScores);\r\n        }\r\n      } catch (error) {\r\n        console.log('Failed to load competitions');\r\n      }\r\n    };\r\n    fetchCompetitionData();\r\n  }, [account, chainId, id, wipeSignatureAndReRequest]);\r\n\r\n  const handleListItemClick = (event, index) => setSelectedIndex(index);\r\n\r\n  const ActivateGame = (item) => {\r\n    History.push(`/play-game/${item.id}`);\r\n  };\r\n\r\n  const compSignUp = async (compId) => {\r\n    const url = `CompetitionParticipation/${compId}/Enrol`;\r\n    try {\r\n      const enrollment = await walletAuthFetchWithSigPrompt(\r\n        url,\r\n        'POST',\r\n        wipeSignatureAndReRequest,\r\n        account,\r\n        {\r\n          mode: 'cors',\r\n        },\r\n        false,\r\n        null\r\n      );\r\n\r\n      if (enrollment) {\r\n        setEnrolled(true);\r\n      }\r\n    } catch (error) {\r\n      console.log('Failed to enrol into competition');\r\n    }\r\n  };\r\n\r\n  const infoRow = (label, value) => (\r\n    <Grid\r\n      container\r\n      direction=\"row\"\r\n      justifyContent=\"center\"\r\n      key={uuid_v4()}\r\n      className={compClasses.CompInfoRow}\r\n      style={{ marginBottom: '10px' }}\r\n    >\r\n      <Grid item lg={5} md={5} sm={5} xs={5}>\r\n        <span>{label}</span>\r\n      </Grid>\r\n      <Grid item lg={7} md={7} sm={7} xs={7}>\r\n        <span>{value}</span>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n\r\n  const CompetitionList = () => (\r\n    <Grid container direction=\"row\" justifyContent=\"center\" alignItems=\"center\">\r\n      <Grid item lg={12} md={12} sm={12} xs={12}>\r\n        {!compData && <Suspense fallback={<Spinner />} />}\r\n        {compData && (\r\n          <Card\r\n            key={uuid_v4()}\r\n            className={compClasses.CompWrapper}\r\n            style={{\r\n              backgroundImage: `url(${compData.bannerImageUrl}`,\r\n            }}\r\n          >\r\n            <CardContent\r\n              className={compClasses.CompContent}\r\n              style={{\r\n                background: 'transparent',\r\n              }}\r\n            >\r\n              {/* Heading */}\r\n              <Grid\r\n                container\r\n                direction=\"row\"\r\n                justifyContent=\"center\"\r\n                style={{ marginBottom: '10px' }}\r\n              >\r\n                <Grid item lg={6} md={6} sm={12} xs={12}>\r\n                  <div>\r\n                    <span className={compClasses.CompTitle}>\r\n                      {compData.name}\r\n                    </span>\r\n                  </div>\r\n                </Grid>\r\n                <Grid item lg={6} md={6} sm={12} xs={12}>\r\n                  <div>\r\n                    <div className={compClasses.CompActiveDates}>\r\n                      {compData.formattedStart} - {compData.formattedEnd}\r\n                    </div>\r\n                  </div>\r\n                </Grid>\r\n              </Grid>\r\n\r\n              <Grid container direction=\"row\" justifyContent=\"center\">\r\n                {/* Logo */}\r\n                <Grid item lg={2} md={2} sm={2} xs={2}>\r\n                  <div>\r\n                    <img\r\n                      className={compClasses.CompLogo}\r\n                      src={compData.competitionLogoUrl}\r\n                      alt=\"compLogo\"\r\n                    />\r\n                  </div>\r\n                </Grid>\r\n\r\n                {/* Prizes */}\r\n                <Grid\r\n                  item\r\n                  lg={4}\r\n                  md={4}\r\n                  sm={4}\r\n                  xs={12}\r\n                  style={{ textAlign: 'center' }}\r\n                >\r\n                  <div className={compClasses.PrizePoolHeading}>\r\n                    <span>Prize Pool</span>\r\n                  </div>\r\n\r\n                  {compData?.prizes?.length > 0 &&\r\n                    compData.prizes\r\n                      .sort((a, b) => (a.order > b.order ? 1 : 0))\r\n                      .map((prize, prizeIndex) => (\r\n                        <Grid\r\n                          container\r\n                          direction=\"row\"\r\n                          justifyContent=\"center\"\r\n                          key={uuid_v4()}\r\n                          className={compClasses.PrizeRow}\r\n                          style={{ marginBottom: '10px' }}\r\n                        >\r\n                          <Grid item lg={5} md={5} sm={5} xs={5}>\r\n                            <span\r\n                              className={`${\r\n                                prizeIndex < 3\r\n                                  ? prizeClassMapping[prizeIndex]\r\n                                  : ''\r\n                              }`}\r\n                            >\r\n                              {prize.position}\r\n                            </span>\r\n                          </Grid>\r\n                          <Grid item lg={7} md={7} sm={7} xs={7}>\r\n                            <span\r\n                              className={`${\r\n                                prizeIndex < 3\r\n                                  ? prizeClassMapping[prizeIndex]\r\n                                  : ''\r\n                              }`}\r\n                            >\r\n                              {prize.reward}\r\n                            </span>\r\n                          </Grid>\r\n                        </Grid>\r\n                      ))}\r\n                </Grid>\r\n\r\n                {/* Info */}\r\n                <Grid\r\n                  item\r\n                  lg={3}\r\n                  md={3}\r\n                  sm={3}\r\n                  xs={3}\r\n                  style={{ textAlign: 'center' }}\r\n                >\r\n                  <div className={compClasses.CompInfoHeading}>\r\n                    <span>Stats</span>\r\n                  </div>\r\n                  <div>\r\n                    {participantCount > 0 &&\r\n                      infoRow('Participants', participantCount)}\r\n                    {playerRank && infoRow('Your Position', playerRank)}\r\n                    {participantCount === 0 && (\r\n                      <Grid\r\n                        container\r\n                        direction=\"row\"\r\n                        justifyContent=\"center\"\r\n                        key={uuid_v4()}\r\n                        className={compClasses.CompInfoRow}\r\n                        style={{ marginBottom: '10px' }}\r\n                      >\r\n                        <Grid item lg={12} md={12} sm={12} xs={12}>\r\n                          <span>No Participants</span>\r\n                        </Grid>\r\n                      </Grid>\r\n                    )}\r\n                  </div>\r\n                </Grid>\r\n\r\n                {/* GAMES */}\r\n                <Grid item lg={3} md={3} sm={3} xs={3}>\r\n                  <div>\r\n                    <div className={compClasses.CompActiveDates}>\r\n                      Competition Games\r\n                    </div>\r\n                    <div className={compClasses.CompGamesWrapper}>\r\n                      <Grid container spacing={2} justifyContent=\"flex-end\">\r\n                        {compData.includedGames?.length > 0 &&\r\n                          compData.includedGames.map((item) => (\r\n                            <Grid\r\n                              item\r\n                              lg={6}\r\n                              sm={6}\r\n                              xs={6}\r\n                              key={uuid_v4()}\r\n                              className={compClasses.perGameContainer}\r\n                            >\r\n                              <GameItem item={item} ActiveGame={ActivateGame} />\r\n                            </Grid>\r\n                          ))}\r\n                      </Grid>\r\n                    </div>\r\n                  </div>\r\n                </Grid>\r\n              </Grid>\r\n            </CardContent>\r\n            {/* Sponsor row */}\r\n            {compData.sponsors.length > 0 && (\r\n              <CardActions\r\n                className={compClasses.CompActions}\r\n                style={{\r\n                  background: 'transparent',\r\n                }}\r\n              >\r\n                <Grid container spacing={2} justifyContent=\"flex-end\">\r\n                  <Grid item lg={3} sm={3} xs={3} />\r\n                  <Grid item lg={3} sm={3} xs={3} />\r\n                  <Grid item lg={3} sm={3} xs={3} />\r\n                  <Grid item lg={3} sm={3} xs={3} />\r\n                </Grid>\r\n              </CardActions>\r\n            )}\r\n\r\n            <CardActions\r\n              className={compClasses.CompActions}\r\n              style={{\r\n                background: 'transparent',\r\n              }}\r\n            >\r\n              <Grid container spacing={2} justifyContent=\"flex-end\">\r\n                <Grid item lg={2} sm={2} xs={2} />\r\n                <Grid item lg={3} sm={3} xs={3} />\r\n                <Grid\r\n                  item\r\n                  lg={4}\r\n                  sm={4}\r\n                  xs={4}\r\n                  key={uuid_v4()}\r\n                  className={compClasses.perGameContainer}\r\n                >\r\n                  {compData.ended && enrolled && (\r\n                    <span className={compClasses.EnrolledText}>\r\n                      Participated\r\n                    </span>\r\n                  )}{' '}\r\n                  {!compData.ended && enrolled && (\r\n                    <span className={compClasses.EnrolledText}>\r\n                      Participating\r\n                    </span>\r\n                  )}\r\n                  {!compData.ended && !enrolled && (\r\n                    <Button\r\n                      size=\"small\"\r\n                      className={compClasses.CompSignUpButton}\r\n                      onClick={() => compSignUp(compData.id)}\r\n                    >\r\n                      Sign up!\r\n                    </Button>\r\n                  )}\r\n                </Grid>\r\n              </Grid>\r\n            </CardActions>\r\n          </Card>\r\n        )}\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n\r\n  const MobileCompetitionList = () => (\r\n    <Grid container direction=\"row\" justifyContent=\"center\" alignItems=\"center\">\r\n      <Grid item lg={12} md={12} sm={12} xs={12}>\r\n        {!compData && <Suspense fallback={<Spinner />} />}\r\n        {compData && (\r\n          <Card\r\n            className={compClasses.CompWrapper}\r\n            style={{\r\n              backgroundImage: `url(${compData.bannerImageUrl}`,\r\n            }}\r\n          >\r\n            <CardContent\r\n              className={compClasses.CompContent}\r\n              style={{\r\n                background: 'transparent',\r\n              }}\r\n            >\r\n              {/* Heading */}\r\n              <Grid\r\n                container\r\n                direction=\"row\"\r\n                justifyContent=\"center\"\r\n                style={{ marginBottom: '10px' }}\r\n              >\r\n                <Grid item lg={12} md={12} sm={12} xs={12}>\r\n                  <div>\r\n                    <span className={compClasses.CompTitle}>\r\n                      {compData.name}\r\n                    </span>\r\n                  </div>\r\n                </Grid>\r\n                <Grid item lg={12} md={12} sm={12} xs={12}>\r\n                  <div>\r\n                    <div className={compClasses.CompActiveDates}>\r\n                      {compData.formattedStart} - {compData.formattedEnd}\r\n                    </div>\r\n                  </div>\r\n                </Grid>\r\n              </Grid>\r\n\r\n              <Grid container direction=\"row\" justifyContent=\"center\">\r\n                {/* Logo */}\r\n                <Grid item lg={2} md={2} sm={12} xs={12}>\r\n                  <div>\r\n                    <img\r\n                      className={compClasses.CompLogo}\r\n                      src={compData.competitionLogoUrl}\r\n                      alt=\"compLogo\"\r\n                    />\r\n                  </div>\r\n                </Grid>\r\n\r\n                {/* Prizes */}\r\n                <Grid\r\n                  item\r\n                  lg={3}\r\n                  md={3}\r\n                  sm={12}\r\n                  xs={12}\r\n                  style={{ textAlign: 'center' }}\r\n                >\r\n                  <div className={compClasses.PrizePoolHeading}>\r\n                    <span>Prize Pool</span>\r\n                  </div>\r\n\r\n                  {compData?.prizes?.length > 0 &&\r\n                    compData.prizes\r\n                      .sort((a, b) => (a.order > b.order ? 1 : 0))\r\n                      .map((prize, prizeIndex) => (\r\n                        <Grid\r\n                          container\r\n                          direction=\"row\"\r\n                          justifyContent=\"center\"\r\n                          key={uuid_v4()}\r\n                          className={compClasses.PrizeRow}\r\n                        >\r\n                          <Grid item lg={3} md={3} sm={3} xs={3}>\r\n                            <span\r\n                              className={`${\r\n                                prizeIndex < 3\r\n                                  ? prizeClassMapping[prizeIndex]\r\n                                  : ''\r\n                              }`}\r\n                            >\r\n                              {prize.position}\r\n                            </span>\r\n                          </Grid>\r\n                          <Grid item lg={9} md={9} sm={9} xs={9}>\r\n                            <span\r\n                              className={`${\r\n                                prizeIndex < 3\r\n                                  ? prizeClassMapping[prizeIndex]\r\n                                  : ''\r\n                              }`}\r\n                            >\r\n                              {prize.reward}\r\n                            </span>\r\n                          </Grid>\r\n                        </Grid>\r\n                      ))}\r\n                </Grid>\r\n\r\n                {/* GAMES */}\r\n                <Grid item lg={12} md={12} sm={12} xs={12}>\r\n                  <div>\r\n                    <div className={compClasses.CompGamesHeader}>\r\n                      Competition Games\r\n                    </div>\r\n                    <div className={compClasses.CompGamesWrapper}>\r\n                      <Grid container spacing={2} justifyContent=\"flex-end\">\r\n                        {compData.includedGames?.length > 0 &&\r\n                          compData.includedGames.map((item) => (\r\n                            <Grid\r\n                              item\r\n                              lg={6}\r\n                              sm={6}\r\n                              xs={6}\r\n                              key={uuid_v4()}\r\n                              className={compClasses.perGameContainer}\r\n                            >\r\n                              <GameItem item={item} ActiveGame={ActivateGame} />\r\n                            </Grid>\r\n                          ))}\r\n                      </Grid>\r\n                    </div>\r\n                  </div>\r\n                </Grid>\r\n              </Grid>\r\n            </CardContent>\r\n            {/* Sponsor row */}\r\n            {compData.sponsors.length > 0 && (\r\n              <CardActions\r\n                className={compClasses.CompActions}\r\n                style={{\r\n                  background: 'transparent',\r\n                }}\r\n              />\r\n            )}\r\n\r\n            <CardActions\r\n              className={compClasses.CompActions}\r\n              style={{\r\n                background: 'transparent',\r\n              }}\r\n            >\r\n              <div style={{ width: '100%' }}>\r\n                {compData.ended && enrolled && (\r\n                  <span className={compClasses.EnrolledText}>Participated</span>\r\n                )}{' '}\r\n                {!compData.ended && enrolled && (\r\n                  <span className={compClasses.EnrolledText}>\r\n                    Participating\r\n                  </span>\r\n                )}\r\n                {!compData.ended && !enrolled && (\r\n                  <Button\r\n                    size=\"small\"\r\n                    className={compClasses.CompSignUpButton}\r\n                    onClick={() => compSignUp(compData.id)}\r\n                  >\r\n                    Sign up!\r\n                  </Button>\r\n                )}\r\n              </div>\r\n            </CardActions>\r\n          </Card>\r\n        )}\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <BrowserView style={{ marginTop: '20px', padding: '10px' }}>\r\n        <CompetitionList />\r\n        <Grid\r\n          container\r\n          direction=\"row\"\r\n          justifyContent=\"center\"\r\n          alignItems=\"center\"\r\n        >\r\n          <Grid item xs={10} sm={10} lg={10}>\r\n            <Grid container justifyContent=\"center\">\r\n              <Grid item className={clsx(classes.marginBottom5)} />\r\n              <div style={{ width: '100%' }}>\r\n                <List\r\n                  dense\r\n                  className={classes.rankList}\r\n                  style={{ height: '632px' }}\r\n                >\r\n                  {compLeaderboardData.length < 1 && (\r\n                    <Suspense fallback={<Spinner />} />\r\n                  )}\r\n                  {compLeaderboardData.length > 0 &&\r\n                    compLeaderboardData.map((data, index) => {\r\n                      return (\r\n                        <List\r\n                          key={uuid_v4()}\r\n                          component=\"nav\"\r\n                          aria-label=\"main mailbox folders\"\r\n                        >\r\n                          <ListItem\r\n                            button\r\n                            selected={selectedIndex === index}\r\n                            onClick={(event) =>\r\n                              handleListItemClick(event, index)\r\n                            }\r\n                          >\r\n                            {index <= 2 && (\r\n                              <ListItemIcon\r\n                                className={playClasses.leaderboardCupItem}\r\n                              >\r\n                                {index === 0 && <img src={gold} alt=\"gold\" />}\r\n                                {index === 1 && (\r\n                                  <img src={silver} alt=\"silver\" />\r\n                                )}\r\n                                {index === 2 && (\r\n                                  <img src={bronze} alt=\"bronze\" />\r\n                                )}\r\n                              </ListItemIcon>\r\n                            )}\r\n                            {index > 2 && (\r\n                              <ListItemText\r\n                                primary={index + 1}\r\n                                className={playClasses.leaderboardRankItem}\r\n                              />\r\n                            )}\r\n                            <ListItemIcon\r\n                              key={uuid_v4()}\r\n                              className={classes.ListAvatarItem}\r\n                            >\r\n                              <img\r\n                                src={\r\n                                  data.playerAvatar\r\n                                    ? `${data.playerAvatar}`\r\n                                    : avatar\r\n                                }\r\n                                alt=\"avatar\"\r\n                                className={classes.avatarWidth}\r\n                              />\r\n                            </ListItemIcon>\r\n                            <ListItemText\r\n                              key={uuid_v4()}\r\n                              className={playClasses.leaderboardUserAddress}\r\n                            >\r\n                              {data.playerName}\r\n                            </ListItemText>\r\n                            <ListItemText\r\n                              key={uuid_v4()}\r\n                              className={playClasses.leaderboardScore}\r\n                            >\r\n                              {data.score}\r\n                            </ListItemText>\r\n                          </ListItem>\r\n                        </List>\r\n                      );\r\n                    })}\r\n                </List>\r\n              </div>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      </BrowserView>\r\n      <MobileView>\r\n        <MobileCompetitionList />\r\n        <Grid\r\n          container\r\n          direction=\"row\"\r\n          justifyContent=\"center\"\r\n          alignItems=\"center\"\r\n        >\r\n          <Grid item xs={12} sm={6} lg={6} className={classes.parentVideo}>\r\n            <Grid container justifyContent=\"center\">\r\n              <Grid item className={clsx(classes.marginBottom5)} />\r\n              <div style={{ width: '100%' }}>\r\n                <List\r\n                  dense\r\n                  className={classes.rankList}\r\n                  style={{ height: '632px' }}\r\n                >\r\n                  {compLeaderboardData.length < 1 && (\r\n                    <Suspense fallback={<Spinner />} />\r\n                  )}\r\n                  {compLeaderboardData.length > 0 &&\r\n                    compLeaderboardData.map((data, index) => {\r\n                      return (\r\n                        <List\r\n                          key={uuid_v4()}\r\n                          component=\"nav\"\r\n                          aria-label=\"main mailbox folders\"\r\n                        >\r\n                          <ListItem\r\n                            button\r\n                            selected={selectedIndex === index}\r\n                            onClick={(event) =>\r\n                              handleListItemClick(event, index)\r\n                            }\r\n                          >\r\n                            {index <= 2 && (\r\n                              <ListItemIcon\r\n                                className={playClasses.leaderboardCupItem}\r\n                              >\r\n                                {index === 0 && <img src={gold} alt=\"gold\" />}\r\n                                {index === 1 && (\r\n                                  <img src={silver} alt=\"silver\" />\r\n                                )}\r\n                                {index === 2 && (\r\n                                  <img src={bronze} alt=\"bronze\" />\r\n                                )}\r\n                              </ListItemIcon>\r\n                            )}\r\n                            {index > 2 && (\r\n                              <ListItemText\r\n                                primary={index + 1}\r\n                                className={playClasses.leaderboardRankItem}\r\n                              />\r\n                            )}\r\n                            <ListItemIcon\r\n                              key={uuid_v4()}\r\n                              className={classes.ListAvatarItem}\r\n                            >\r\n                              <img\r\n                                src={\r\n                                  data.playerAvatar\r\n                                    ? `${data.playerAvatar}`\r\n                                    : avatar\r\n                                }\r\n                                alt=\"avatar\"\r\n                                className={classes.avatarWidth}\r\n                              />\r\n                            </ListItemIcon>\r\n                            <ListItemText\r\n                              key={uuid_v4()}\r\n                              className={playClasses.leaderboardUserAddress}\r\n                            >\r\n                              {data.playerName}\r\n                            </ListItemText>\r\n                            <ListItemText\r\n                              key={uuid_v4()}\r\n                              className={playClasses.leaderboardScore}\r\n                            >\r\n                              {data.score}\r\n                            </ListItemText>\r\n                          </ListItem>\r\n                        </List>\r\n                      );\r\n                    })}\r\n                </List>\r\n              </div>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      </MobileView>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Competition;\r\n","import { Grid } from '@material-ui/core';\r\nimport SportsEsportsIcon from '@material-ui/icons/SportsEsports';\r\nimport DesktopMacIcon from '@material-ui/icons/DesktopMac';\r\nimport MouseIcon from '@material-ui/icons/Mouse';\r\n\r\nconst GameItem = ({ item, ActiveGame }) => {\r\n  return (\r\n    <Grid className=\"game-holder\">\r\n      <Grid className=\"game-image-wrapper\">\r\n        <Grid className=\"game-image-holder\">\r\n          <Grid className=\"game-image-overlay\">\r\n            {item?.keyboard && <DesktopMacIcon />}\r\n            {item?.joystick && <SportsEsportsIcon />}\r\n            {item?.mouse && <MouseIcon />}\r\n          </Grid>\r\n          <Grid\r\n            className=\"game-image-bg\"\r\n            style={{\r\n              backgroundImage: `url(${process.env.REACT_APP_API_URL}/${item.img})`,\r\n            }}\r\n          />\r\n          <Grid className=\"game-action gameActionIcon\">\r\n            <p className=\"playBtn\" onClick={() => ActiveGame(item)}>\r\n              Play the Game\r\n            </p>\r\n          </Grid>\r\n          <Grid className=\"game-info\">\r\n            <span className=\"game-name\">\r\n              <span>{item.title}</span>\r\n            </span>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default GameItem;\r\n","export default __webpack_public_path__ + \"static/media/goldcup.f08b38c7.png\";","export default __webpack_public_path__ + \"static/media/silvercup.ab765200.png\";","export default __webpack_public_path__ + \"static/media/bronzecup.fd633b50.png\";","export default __webpack_public_path__ + \"static/media/Profile2.140c506b.jpg\";"],"sourceRoot":""}