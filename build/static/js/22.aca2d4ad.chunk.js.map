{"version":3,"sources":["assets/icons/play.svg","assets/img/start.png","pages/PlayGame/Leaderboard.js","pages/PlayGame/index.js","assets/img/Cup/goldcup.png","assets/img/Cup/silvercup.png","assets/img/Cup/bronzecup.png","assets/img/Profile2.jpg","assets/img/hifiPodium.png"],"names":["getElapsedTime","timeInSeconds","manipulatedTime","seconds","Math","floor","secondsAsString","concat","minutes","minutesAsString","totalHours","totalHoursAsString","LeaderBoard","props","currentGame","wipeSignatureAndReRequest","classes","useStyles","ranking","playGameSpecificClasses","playGameSpecific","playClasses","_useState","useState","_useState2","_slicedToArray","highScoreData","setHighScoreData","_useState3","_useState4","selectedIndex","setSelectedIndex","_useState5","_useState6","playerStats","setPlayerStats","_useState7","_useState8","bronzePlayer","setBronzePlayer","_useState9","_useState10","silverPlayer","setSilverPlayer","_useState11","_useState12","goldPlayer","setGoldPlayer","_useWeb3React","useWeb3React","chainId","account","setLeaderboardStats","useCallback","leaderboardData","highscores","leaderboard","loggedIn","getCookie","playerStatsResponse","HighScore","highScore","CurrentPosition","currentPosition","TotalPlays","totalPlays","TotalPlayTime","totalPlayTime","orderedScores","_","orderBy","today","Date","index","length","daysAgo","round","abs","date","bronzePlayerLocal","name","playerName","profile","avatar","silverPlayerLocal","goldPlayerLocal","useEffect","fetchLeaderboardStats","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","wrap","_context","prev","next","walletAuthFetchWithSigPrompt","id","sent","stop","apply","arguments","handleListItemClick","event","MobileHighScoreInfoRow","title","info","_jsxs","Grid","container","spacing","children","_jsx","item","xs","sm","lg","className","playInfoRow","HighScoreInfoRow","PodiumPlayer","player","localPlayer","podiumAvatarWrapper","src","alt","podiumAvatar","Avatar","style","height","_Fragment","BrowserView","Suspense","fallback","Spinner","leaderboardPodiumWrapper","leaderboardPodium","backgroundImage","Podium","podiumSilver","podiumGold","podiumBronze","parentVideo","justifyContent","clsx","marginBottom5","width","List","dense","rankList","map","data","component","ListItem","button","selected","onClick","ListItemIcon","leaderboardCupItem","gold","silver","bronze","ListItemText","primary","leaderboardRankItem","ListAvatarItem","avatarWidth","uuid_v4","leaderboardUserAddress","leaderboardScore","leaderboardTimeItem","MobileView","padding","marginBottom","fontSize","marginTop","Transition","React","forwardRef","ref","Slide","_objectSpread","direction","PaperComponent","Draggable","handle","cancel","Paper","PlayGame","_currentGame$addition","_currentGame$addition2","gameId","useParams","playGame","dosclass","doscon","modalclasses","modal","_isMounted","useRef","useSelector","state","signature","dispatch","useDispatch","open","setOpen","keyOpen","setKeyOpen","confirm_open","confirm_setOpen","isLoading","setLoading","timeCounter","setTimeCounter","lastIdletime","setLastIdletime","_useState13","_useState14","elapsedTimeIntervalRef","setElapsedTimeIntervalRef","_useState15","_useState16","control","setControl","minimumTimeToPlay","process","_useState17","_useState18","setCurrentGame","_useState19","_useState20","keyImage","setKeyImage","_useState21","_useState22","fetchingGame","setFetchingGame","_useState23","_useState24","sessionId","setSessionId","startTime","timeDiff","getTime","pauseTimeCounter","clearInterval","undefined","brokenDownElapsedTimeAsNumbers","split","numberAsString","parseInt","hours","storeElapsedTimeOnPause","confirmHandleClickOpen","callBack","localSignature","toast","error","abrupt","t0","_isValidChainId","highScoreCompatible","console","log","_x","continueGameHandle","_ref2","_callee2","startedTime","interval","options","headers","sessionIdResp","_context2","setInterval","gamestartTime","mode","body","JSON","stringify","walletId","Headers","append","setTimeout","document","querySelector","focus","browserPlayGame","_ref3","_callee3","_context3","type","payload","mobilePlayGame","_ref4","_callee4","_context4","confirm_handleClose","handleClose","_ref5","_callee5","totalPlayedTime","finishGameResponse","_context5","tokenCount","tokenType","Number","fetchCurrentGame","_callee7","getGameFromApi","_context7","_ref7","_callee6","url","game","_context6","keyboardControlsImage","window","scrollTo","current","_useState25","_useState26","value","setValue","handleChange","newValue","TabSection","mycustomtabs","md","gameHeading","Tabs","indicatorColor","onChange","Tab","label","TabPanel","tabPanelProps","role","hidden","Box","tabWrapper","PublisherInfoRow","position","zIndex","img","StartMainImage","playInfo","additionalInfo","description","CardContent","mContent","Typography","variant","mCurrentTitle","Card","root","overlayPanel","CardMedia","media","image","overlay","IconButton","playButton","CircularProgress","color","PlayIcon","Leaderboard","Dialog","disableEscapeKeyDown","fullScreen","TransitionComponent","AppBar","appBar","Toolbar","headerTitle","edge","_callee8","_context8","CloseIcon","keyControlContent","joystickImage","keyControlImage","Button","controlButton","keyControlButton","onClose","gameType","gameContent","dosplayer","baseFilePath","bundleUrl","runFile","DialogTitle","cursor","DialogContent","DialogContentText","DialogActions","autoFocus","mRoot","mobileModal"],"mappings":"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","file":"static/js/22.aca2d4ad.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/play.86d0f4da.svg\";","export default __webpack_public_path__ + \"static/media/start.ef116f56.png\";","import { useState, useEffect, Suspense, useCallback } from 'react';\r\nimport { v4 as uuid_v4 } from 'uuid';\r\nimport clsx from 'clsx';\r\nimport { useWeb3React } from '@web3-react/core';\r\nimport _ from 'lodash';\r\n\r\n// ** Import Material-Ui Components\r\nimport Grid from '@material-ui/core/Grid';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Avatar from '@material-ui/core/Avatar';\r\n\r\nimport { BrowserView, MobileView } from 'react-device-detect';\r\n\r\nimport Spinner from '../../components/Spinner';\r\n\r\nimport { walletAuthFetchWithSigPrompt } from '../../helpers/apiFetchWrappers';\r\nimport { getCookie } from '../../helpers/index';\r\n\r\n// ** Import Assets\r\nimport useStyles from '../../assets/styles';\r\nimport gold from '../../assets/img/Cup/goldcup.png';\r\nimport silver from '../../assets/img/Cup/silvercup.png';\r\nimport bronze from '../../assets/img/Cup/bronzecup.png';\r\nimport avatar from '../../assets/img/Profile2.jpg';\r\nimport Podium from '../../assets/img/hifiPodium.png';\r\n\r\nconst getElapsedTime = (timeInSeconds) => {\r\n  if (!timeInSeconds) return '';\r\n  let manipulatedTime = timeInSeconds;\r\n  // Extract integer seconds that dont form a minute using %\r\n  const seconds = Math.floor(manipulatedTime % 60); // ignoring uncomplete seconds (floor)\r\n  // Pad seconds with a zero if neccessary\r\n  const secondsAsString = seconds < 10 ? `0${seconds}` : `${seconds}`;\r\n  // Convert time difference from seconds to minutes using %\r\n  manipulatedTime = Math.floor(manipulatedTime / 60);\r\n  // Extract integer minutes that don't form an hour using %\r\n  const minutes = manipulatedTime % 60; // no need to floor possible incomplete minutes, becase they've been handled as seconds\r\n  // Pad minutes with a zero if neccessary\r\n  const minutesAsString = minutes < 10 ? `0${minutes}` : `${minutes}`;\r\n  // Convert time difference from minutes to hours\r\n  manipulatedTime = Math.floor(manipulatedTime / 60);\r\n  // Extract integer hours that don't form a day using %\r\n  const hours = manipulatedTime % 24; // no need to floor possible incomplete hours, becase they've been handled as seconds\r\n  // Convert time difference from hours to days\r\n  manipulatedTime = Math.floor(manipulatedTime / 24);\r\n  // The rest of timeDiff is number of days\r\n  const days = manipulatedTime;\r\n\r\n  const totalHours = hours + days * 24; // add days to hours\r\n  const totalHoursAsString =\r\n    totalHours < 10 ? `0${totalHours}` : `${totalHours}`;\r\n\r\n  return totalHoursAsString === '00'\r\n    ? `${minutesAsString}:${secondsAsString}`\r\n    : `${totalHoursAsString}:${minutesAsString}:${secondsAsString}`;\r\n};\r\n\r\nconst LeaderBoard = (props) => {\r\n  const { currentGame, wipeSignatureAndReRequest } = props;\r\n\r\n  const classes = useStyles.ranking();\r\n  const playGameSpecificClasses = useStyles.playGameSpecific();\r\n\r\n  const playClasses = useStyles.playGameSpecific();\r\n  const [highScoreData, setHighScoreData] = useState([]);\r\n  const [selectedIndex, setSelectedIndex] = useState(0);\r\n  const [playerStats, setPlayerStats] = useState(null);\r\n\r\n  const [bronzePlayer, setBronzePlayer] = useState(null);\r\n  const [silverPlayer, setSilverPlayer] = useState(null);\r\n  const [goldPlayer, setGoldPlayer] = useState(null);\r\n\r\n  const { chainId, account } = useWeb3React();\r\n\r\n  const setLeaderboardStats = useCallback(\r\n    (leaderboardData) => {\r\n      const highscores = leaderboardData.leaderboard;\r\n      const loggedIn = getCookie(`authHeader-${account}`);\r\n      const playerStatsResponse = {\r\n        HighScore: loggedIn ? leaderboardData.highScore : '',\r\n        CurrentPosition: loggedIn\r\n          ? leaderboardData.currentPosition\r\n          : 'Please sign in to get user stats',\r\n        TotalPlays: loggedIn ? leaderboardData.totalPlays : '',\r\n        TotalPlayTime: loggedIn ? leaderboardData.totalPlayTime : null,\r\n      };\r\n      setPlayerStats(playerStatsResponse);\r\n\r\n      const orderedScores = _.orderBy(highscores, ['score'], ['desc']);\r\n\r\n      const oneDay = 24 * 60 * 60 * 1000;\r\n      const today = new Date();\r\n\r\n      for (let index = 0; index < orderedScores.length; index += 1) {\r\n        orderedScores[index].daysAgo = Math.round(\r\n          Math.abs((today - new Date(orderedScores[index].date)) / oneDay)\r\n        );\r\n      }\r\n      setHighScoreData(orderedScores);\r\n\r\n      if (orderedScores.length > 2) {\r\n        const bronzePlayerLocal = {\r\n          name: orderedScores[2].playerName,\r\n          highScore: orderedScores[2].highScore,\r\n          // team: 'ApeSwap',\r\n          // flag: belgiumFlag,\r\n          profile: orderedScores[2].avatar ? orderedScores[2].avatar : null,\r\n        };\r\n        setBronzePlayer(bronzePlayerLocal);\r\n      }\r\n\r\n      if (orderedScores.length > 1) {\r\n        const silverPlayerLocal = {\r\n          name: orderedScores[1].playerName,\r\n          highScore: orderedScores[1].highScore,\r\n          // team: 'MoonVault',\r\n          // flag: ukFlag,\r\n          profile: orderedScores[1].avatar ? orderedScores[1].avatar : null,\r\n        };\r\n        setSilverPlayer(silverPlayerLocal);\r\n      }\r\n\r\n      if (orderedScores.length > 0) {\r\n        const goldPlayerLocal = {\r\n          name: orderedScores[0].playerName,\r\n          highScore: orderedScores[0].highScore,\r\n          // team: 'HiFivers',\r\n          // flag: ukFlag,\r\n          profile: orderedScores[0].avatar ? orderedScores[0].avatar : null,\r\n        };\r\n        setGoldPlayer(goldPlayerLocal);\r\n      }\r\n    },\r\n    [account]\r\n  );\r\n\r\n  useEffect(() => {\r\n    const fetchLeaderboardStats = async () => {\r\n      const response = await walletAuthFetchWithSigPrompt(\r\n        `GameStats/GetLeaderboardStats?gameId=${currentGame.id}`,\r\n        'GET',\r\n        wipeSignatureAndReRequest,\r\n        account,\r\n        null,\r\n        true,\r\n        null\r\n      );\r\n\r\n      const leaderboardData = await response;\r\n      if (leaderboardData) {\r\n        setLeaderboardStats(leaderboardData);\r\n      }\r\n    };\r\n\r\n    fetchLeaderboardStats();\r\n  }, [\r\n    chainId,\r\n    currentGame,\r\n    account,\r\n    wipeSignatureAndReRequest,\r\n    setLeaderboardStats,\r\n  ]);\r\n\r\n  const handleListItemClick = (event, index) => setSelectedIndex(index);\r\n\r\n  const MobileHighScoreInfoRow = (title, info) => {\r\n    return (\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={6} sm={6} lg={6}>\r\n          <span className={playGameSpecificClasses.playInfoRow}>{title}</span>\r\n        </Grid>\r\n        <Grid item xs={6} sm={6} lg={6}>\r\n          <span className={playGameSpecificClasses.playInfoRow}>{info}</span>\r\n        </Grid>\r\n      </Grid>\r\n    );\r\n  };\r\n\r\n  const HighScoreInfoRow = (title, info) => {\r\n    return (\r\n      <Grid container spacing={5}>\r\n        <Grid item xs={12} sm={5} lg={5}>\r\n          <span className={playGameSpecificClasses.playInfoRow}>{title}</span>\r\n        </Grid>\r\n        <Grid item xs={12} sm={7} lg={7}>\r\n          <span className={playGameSpecificClasses.playInfoRow}>{info}</span>\r\n        </Grid>\r\n      </Grid>\r\n    );\r\n  };\r\n\r\n  const PodiumPlayer = (player, className) => {\r\n    const localPlayer = player;\r\n    return (\r\n      <div className={className}>\r\n        <div className={playGameSpecificClasses.podiumAvatarWrapper}>\r\n          {localPlayer.profile ? (\r\n            <img\r\n              src={localPlayer.profile}\r\n              alt=\"avatar\"\r\n              className={playGameSpecificClasses.podiumAvatar}\r\n            />\r\n          ) : (\r\n            <Avatar\r\n              src={avatar}\r\n              className={playGameSpecificClasses.podiumAvatar}\r\n            />\r\n          )}\r\n        </div>\r\n        <div className=\"UserName\">{localPlayer.name}</div>\r\n        <div>{localPlayer.highScore}</div>\r\n        <div style={{ height: '16px' }} />\r\n        <div className=\"podiumFlag\">\r\n          {/* <img src={localPlayer.flag} alt=\"Country Flag\" /> */}\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <BrowserView>\r\n        <Grid container spacing={2}>\r\n          <Grid item xs={12} sm={6} lg={6}>\r\n            <Grid container spacing={2}>\r\n              {highScoreData.length < 1 && (\r\n                <Grid item xs={12} sm={12} lg={12}>\r\n                  <Suspense fallback={<Spinner />} />\r\n                </Grid>\r\n              )}\r\n              {playerStats && (\r\n                <Grid item xs={12} sm={12} lg={12}>\r\n                  {HighScoreInfoRow(\r\n                    'Current Position',\r\n                    playerStats.CurrentPosition\r\n                  )}\r\n                  {HighScoreInfoRow('High Score', playerStats.HighScore)}\r\n                  {HighScoreInfoRow(\r\n                    'Total Play Sessions',\r\n                    playerStats.TotalPlays\r\n                  )}\r\n                  {HighScoreInfoRow(\r\n                    'Total Play Time',\r\n                    getElapsedTime(playerStats.TotalPlayTime)\r\n                  )}\r\n                </Grid>\r\n              )}\r\n              <Grid item container xs={3} sm={3} lg={3} />\r\n\r\n              <Grid\r\n                item\r\n                container\r\n                xs={9}\r\n                sm={9}\r\n                lg={9}\r\n                className={playGameSpecificClasses.leaderboardPodiumWrapper}\r\n              >\r\n                <Grid\r\n                  container\r\n                  spacing={2}\r\n                  className={playGameSpecificClasses.leaderboardPodium}\r\n                  style={{ backgroundImage: `url(${Podium})` }}\r\n                >\r\n                  <Grid item xs={4} sm={4} lg={4}>\r\n                    {silverPlayer && (\r\n                      <>\r\n                        {PodiumPlayer(\r\n                          silverPlayer,\r\n                          playGameSpecificClasses.podiumSilver\r\n                        )}\r\n                      </>\r\n                    )}\r\n                  </Grid>\r\n                  <Grid item xs={4} sm={4} lg={4}>\r\n                    {goldPlayer && (\r\n                      <>\r\n                        {PodiumPlayer(\r\n                          goldPlayer,\r\n                          playGameSpecificClasses.podiumGold\r\n                        )}\r\n                      </>\r\n                    )}\r\n                  </Grid>\r\n                  <Grid item xs={4} sm={4} lg={4}>\r\n                    {bronzePlayer && (\r\n                      <>\r\n                        {PodiumPlayer(\r\n                          bronzePlayer,\r\n                          playGameSpecificClasses.podiumBronze\r\n                        )}\r\n                      </>\r\n                    )}\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid item xs={12} sm={6} lg={6} className={classes.parentVideo}>\r\n            <Grid container justifyContent=\"center\">\r\n              <Grid item className={clsx(classes.marginBottom5)} />\r\n              <div style={{ width: '100%' }}>\r\n                <List\r\n                  dense\r\n                  className={classes.rankList}\r\n                  style={{ height: '632px' }}\r\n                >\r\n                  {highScoreData.length < 1 && (\r\n                    <Suspense fallback={<Spinner />} />\r\n                  )}\r\n                  {highScoreData.length > 0 &&\r\n                    highScoreData.map((data, index) => {\r\n                      return (\r\n                        <List\r\n                          key={uuid_v4()}\r\n                          component=\"nav\"\r\n                          aria-label=\"main mailbox folders\"\r\n                        >\r\n                          <ListItem\r\n                            button\r\n                            selected={selectedIndex === index}\r\n                            onClick={(event) =>\r\n                              handleListItemClick(event, index)\r\n                            }\r\n                          >\r\n                            {index <= 2 && (\r\n                              <ListItemIcon\r\n                                className={playClasses.leaderboardCupItem}\r\n                              >\r\n                                {index === 0 && <img src={gold} alt=\"gold\" />}\r\n                                {index === 1 && (\r\n                                  <img src={silver} alt=\"silver\" />\r\n                                )}\r\n                                {index === 2 && (\r\n                                  <img src={bronze} alt=\"bronze\" />\r\n                                )}\r\n                              </ListItemIcon>\r\n                            )}\r\n                            {index > 2 && (\r\n                              <ListItemText\r\n                                primary={index + 1}\r\n                                className={playClasses.leaderboardRankItem}\r\n                              />\r\n                            )}\r\n                            <ListItemIcon\r\n                              key={uuid_v4()}\r\n                              className={classes.ListAvatarItem}\r\n                            >\r\n                              <img\r\n                                src={data.avatar ? `${data.avatar}` : avatar}\r\n                                alt=\"avatar\"\r\n                                className={classes.avatarWidth}\r\n                              />\r\n                            </ListItemIcon>\r\n                            <ListItemText\r\n                              key={uuid_v4()}\r\n                              className={playClasses.leaderboardUserAddress}\r\n                            >\r\n                              {data.playerName}\r\n                            </ListItemText>\r\n                            <ListItemText\r\n                              key={uuid_v4()}\r\n                              className={playClasses.leaderboardScore}\r\n                            >\r\n                              {data.highScore}\r\n                            </ListItemText>\r\n                            <ListItemText\r\n                              key={uuid_v4()}\r\n                              className={playClasses.leaderboardTimeItem}\r\n                            >\r\n                              {data.daysAgo < 1\r\n                                ? `Today`\r\n                                : `${data.daysAgo} days ago`}\r\n                            </ListItemText>\r\n                          </ListItem>\r\n                        </List>\r\n                      );\r\n                    })}\r\n                </List>\r\n              </div>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      </BrowserView>\r\n      <MobileView>\r\n        <Grid item style={{ padding: '5px' }}>\r\n          <Grid\r\n            item\r\n            xs={12}\r\n            sm={12}\r\n            lg={12}\r\n            style={{ marginBottom: '10px', fontSize: '20px' }}\r\n          >\r\n            <span className={playGameSpecificClasses.playInfoRow}>\r\n              High Scores\r\n            </span>\r\n          </Grid>\r\n          <hr />\r\n          {highScoreData.length < 1 && (\r\n            <Grid item xs={12} sm={12} lg={12}>\r\n              <Suspense fallback={<Spinner />} />\r\n            </Grid>\r\n          )}\r\n          {playerStats && (\r\n            <>\r\n              {MobileHighScoreInfoRow('Ranking', playerStats.CurrentPosition)}\r\n              {MobileHighScoreInfoRow('High Score', playerStats.HighScore)}\r\n              {MobileHighScoreInfoRow('Total Sessions', playerStats.TotalPlays)}\r\n              {MobileHighScoreInfoRow(\r\n                'Play Time',\r\n                getElapsedTime(playerStats.TotalPlayTime)\r\n              )}\r\n            </>\r\n          )}\r\n          <Grid\r\n            item\r\n            xs={12}\r\n            sm={6}\r\n            lg={6}\r\n            className={classes.parentVideo}\r\n            style={{ marginTop: '20px' }}\r\n          >\r\n            <Grid container justifyContent=\"center\">\r\n              <Grid item className={clsx(classes.marginBottom5)} />\r\n              <div style={{ width: '100%' }}>\r\n                <List\r\n                  dense\r\n                  className={classes.rankList}\r\n                  style={{ height: '632px' }}\r\n                >\r\n                  {highScoreData.length < 1 && (\r\n                    <Suspense fallback={<Spinner />} />\r\n                  )}\r\n                  {highScoreData.length > 0 &&\r\n                    highScoreData.map((data, index) => {\r\n                      return (\r\n                        <List\r\n                          key={uuid_v4()}\r\n                          component=\"nav\"\r\n                          aria-label=\"main mailbox folders\"\r\n                        >\r\n                          <ListItem\r\n                            button\r\n                            selected={selectedIndex === index}\r\n                            onClick={(event) =>\r\n                              handleListItemClick(event, index)\r\n                            }\r\n                          >\r\n                            <ListItemText\r\n                              key={uuid_v4()}\r\n                              className={playClasses.leaderboardUserAddress}\r\n                            >\r\n                              {data.playerName}\r\n                            </ListItemText>\r\n                            <ListItemText\r\n                              key={uuid_v4()}\r\n                              className={playClasses.leaderboardScore}\r\n                            >\r\n                              {data.highScore}\r\n                            </ListItemText>\r\n                            <ListItemText\r\n                              key={uuid_v4()}\r\n                              className={playClasses.leaderboardTimeItem}\r\n                            >\r\n                              {data.daysAgo < 1\r\n                                ? `Today`\r\n                                : `${data.daysAgo} days ago`}\r\n                            </ListItemText>\r\n                          </ListItem>\r\n                        </List>\r\n                      );\r\n                    })}\r\n                </List>\r\n              </div>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      </MobileView>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LeaderBoard;\r\n","import React, {\r\n  useEffect,\r\n  useState,\r\n  useRef,\r\n  useCallback,\r\n  Suspense,\r\n} from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport clsx from 'clsx';\r\nimport { useParams } from 'react-router-dom';\r\nimport { v4 as uuid_v4 } from 'uuid';\r\n\r\n// ** Import Material-Ui Components\r\nimport Box from '@material-ui/core/Box';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Draggable from 'react-draggable';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport { toast } from 'react-toastify';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\n\r\nimport { useWeb3React } from '@web3-react/core';\r\n\r\n// ** Import MobileView\r\nimport { BrowserView, MobileView } from 'react-device-detect';\r\nimport 'firebase/firestore';\r\n\r\n// ** Import Assets\r\nimport useStyles from '../../assets/styles';\r\n// ** Import SVG Icons\r\nimport PlayIcon from '../../assets/icons/play.svg';\r\n\r\nimport StartMainImage from '../../assets/img/start.png';\r\n\r\nimport { _isValidChainId } from '../../helpers/index';\r\nimport { walletAuthFetchWithSigPrompt } from '../../helpers/apiFetchWrappers';\r\n\r\n// ** Import Components\r\nimport Spinner from '../../components/Spinner';\r\n\r\n// **  Import contract DATA\r\nimport { getCookie } from '../../helpers';\r\n\r\nimport Leaderboard from './Leaderboard';\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nfunction PaperComponent(props) {\r\n  return (\r\n    <Draggable\r\n      handle=\"#draggable-dialog-title\"\r\n      cancel={'[class*=\"MuiDialogContent-root\"]'}\r\n    >\r\n      <Paper {...props} />\r\n    </Draggable>\r\n  );\r\n}\r\n\r\nconst PlayGame = (props) => {\r\n  const { wipeSignatureAndReRequest } = props;\r\n  const { gameId } = useParams();\r\n  // ** Define Maintainers\r\n  const classes = useStyles.playGame();\r\n  const playGameSpecificClasses = useStyles.playGameSpecific();\r\n\r\n  const dosclass = useStyles.doscon();\r\n  const modalclasses = useStyles.modal();\r\n\r\n  const _isMounted = useRef(true); // Initial value _isMounted = true\r\n  const profile = useSelector((state) => state.profile);\r\n\r\n  const { account, chainId } = useWeb3React();\r\n\r\n  const signature = getCookie(`base64Sig-${account}`);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const [open, setOpen] = useState(false);\r\n  const [keyOpen, setKeyOpen] = useState(false);\r\n  const [confirm_open, confirm_setOpen] = useState(false);\r\n  const [isLoading, setLoading] = useState(false);\r\n  const [timeCounter, setTimeCounter] = useState('00:00:00');\r\n  const [lastIdletime, setLastIdletime] = useState(null);\r\n  const [elapsedTimeIntervalRef, setElapsedTimeIntervalRef] = useState('');\r\n  const [control, setControl] = useState('key');\r\n  const minimumTimeToPlay = process.env.REACT_APP_MINIMUM_PLAY_FOR_REWARD;\r\n\r\n  const [currentGame, setCurrentGame] = useState(null);\r\n  const [keyImage, setKeyImage] = useState(null);\r\n  const [fetchingGame, setFetchingGame] = useState(false);\r\n\r\n  const [sessionId, setSessionId] = useState(null);\r\n\r\n  // Stores the elapsed time hours, minutes and seconds details on pause\r\n  const storeElapsedTimeOnPause = () => {\r\n    // Break down elapsed time from display test\r\n    const brokenDownElapsedTime = timeCounter.split(':');\r\n\r\n    // Convert list to numbers\r\n    const brokenDownElapsedTimeAsNumbers = brokenDownElapsedTime.map(\r\n      (numberAsString) => parseInt(numberAsString, 10)\r\n    );\r\n    const hours =\r\n      brokenDownElapsedTimeAsNumbers.length === 3\r\n        ? brokenDownElapsedTimeAsNumbers[0]\r\n        : 0;\r\n    const minutes =\r\n      brokenDownElapsedTimeAsNumbers.length === 3\r\n        ? brokenDownElapsedTimeAsNumbers[1]\r\n        : brokenDownElapsedTimeAsNumbers[0];\r\n    const seconds =\r\n      brokenDownElapsedTimeAsNumbers.length === 3\r\n        ? brokenDownElapsedTimeAsNumbers[2]\r\n        : brokenDownElapsedTimeAsNumbers[1];\r\n    return parseInt(hours, 10) * 60 * 60 + parseInt(minutes, 10) * 60 + seconds;\r\n  };\r\n\r\n  const getElapsedTime = (startTime) => {\r\n    // Record end time\r\n    const endTime = new Date();\r\n    // Compute time difference in milliseconds\r\n    let timeDiff = endTime.getTime() - startTime;\r\n    // Convert time difference from milliseconds to seconds\r\n    timeDiff /= 1000;\r\n    // Extract integer seconds that dont form a minute using %\r\n    const seconds = Math.floor(timeDiff % 60); // ignoring uncomplete seconds (floor)\r\n    // Pad seconds with a zero if neccessary\r\n    const secondsAsString = seconds < 10 ? `0${seconds}` : `${seconds}`;\r\n    // Convert time difference from seconds to minutes using %\r\n    timeDiff = Math.floor(timeDiff / 60);\r\n    // Extract integer minutes that don't form an hour using %\r\n    const minutes = timeDiff % 60; // no need to floor possible incomplete minutes, becase they've been handled as seconds\r\n    // Pad minutes with a zero if neccessary\r\n    const minutesAsString = minutes < 10 ? `0${minutes}` : `${minutes}`;\r\n    // Convert time difference from minutes to hours\r\n    timeDiff = Math.floor(timeDiff / 60);\r\n    // Extract integer hours that don't form a day using %\r\n    const hours = timeDiff % 24; // no need to floor possible incomplete hours, becase they've been handled as seconds\r\n    // Convert time difference from hours to days\r\n    timeDiff = Math.floor(timeDiff / 24);\r\n    // The rest of timeDiff is number of days\r\n    const days = timeDiff;\r\n\r\n    const totalHours = hours + days * 24; // add days to hours\r\n    const totalHoursAsString =\r\n      totalHours < 10 ? `0${totalHours}` : `${totalHours}`;\r\n\r\n    return totalHoursAsString === '00'\r\n      ? `${minutesAsString}:${secondsAsString}`\r\n      : `${totalHoursAsString}:${minutesAsString}:${secondsAsString}`;\r\n  };\r\n\r\n  /** Pauses stopwatch */\r\n  const pauseTimeCounter = () => {\r\n    // Clear interval\r\n    if (typeof elapsedTimeIntervalRef !== 'undefined') {\r\n      clearInterval(elapsedTimeIntervalRef);\r\n      setElapsedTimeIntervalRef(undefined);\r\n    }\r\n    // Store the elapsed time on pause\r\n    return storeElapsedTimeOnPause();\r\n  };\r\n\r\n  const confirmHandleClickOpen = () => {\r\n    confirm_setOpen(true);\r\n  };\r\n\r\n  const playGame = async (callBack) => {\r\n    if (!account) {\r\n      toast.error('Please connect your wallet.');\r\n      return;\r\n    }\r\n    setLoading(true);\r\n\r\n    if (!account || !chainId || !(await _isValidChainId())) {\r\n      toast.error('Unsupported Network. Please change the network BSC Testnet');\r\n      setLoading(false);\r\n      return;\r\n    }\r\n\r\n    if (currentGame.highScoreCompatible) {\r\n      const localSignature = getCookie(`signature-${account}`);\r\n      if (!localSignature || localSignature === '') {\r\n        wipeSignatureAndReRequest(\r\n          () => {\r\n            setLoading(false);\r\n            callBack();\r\n          },\r\n          () => {\r\n            setLoading(false);\r\n            console.log('error');\r\n          }\r\n        );\r\n\r\n        return;\r\n      }\r\n    }\r\n\r\n    callBack();\r\n  };\r\n\r\n  const continueGameHandle = async () => {\r\n    const startedTime = new Date();\r\n    let interval = null;\r\n\r\n    interval = setInterval(() => {\r\n      // Compute the elapsed time & display\r\n      let gamestartTime = 0;\r\n      if (lastIdletime !== null) {\r\n        gamestartTime = startedTime.getTime() - lastIdletime + 1000 * 60;\r\n        setLastIdletime(null);\r\n      } else {\r\n        gamestartTime = startedTime.getTime();\r\n      }\r\n      setTimeCounter(getElapsedTime(gamestartTime)); // pass the actual record start time\r\n      // Improvement: Can Stop elapsed time and resert when a maximum elapsed time\r\n      //              has been reached.\r\n    }, 1000);\r\n    setElapsedTimeIntervalRef(interval);\r\n\r\n    const options = {\r\n      mode: 'cors',\r\n      body: JSON.stringify({ gameId, walletId: account }),\r\n    };\r\n\r\n    const headers = new Headers();\r\n    headers.append('Content-Type', 'application/json');\r\n    headers.append('Accept', 'application/json');\r\n\r\n    const sessionIdResp = await walletAuthFetchWithSigPrompt(\r\n      'Play/StartGame',\r\n      'POST',\r\n      wipeSignatureAndReRequest,\r\n      account,\r\n      options,\r\n      true,\r\n      headers\r\n    );\r\n    if (sessionIdResp) {\r\n      setSessionId(sessionIdResp.sessionId);\r\n    }\r\n\r\n    setKeyOpen(false);\r\n    setOpen(true);\r\n    setTimeout(() => {\r\n      if (document.querySelector('.gameframe')) {\r\n        document.querySelector('.gameframe').focus();\r\n      }\r\n    }, 5000);\r\n  };\r\n\r\n  const browserPlayGame = async () => {\r\n    await playGame(() => {\r\n      setLoading(false);\r\n      setKeyOpen(true);\r\n      dispatch({\r\n        type: 'ADD_HISTORY',\r\n        payload: currentGame,\r\n      });\r\n    });\r\n  };\r\n\r\n  const mobilePlayGame = async () => {\r\n    await playGame(() => {\r\n      setLoading(false);\r\n      setOpen(true);\r\n      continueGameHandle();\r\n      dispatch({\r\n        type: 'ADD_HISTORY',\r\n        payload: currentGame,\r\n      });\r\n    });\r\n  };\r\n\r\n  // Confirm To Close Game Play\r\n  const confirm_handleClose = () => {\r\n    confirm_setOpen(false);\r\n  };\r\n\r\n  // Close Game Play\r\n  const handleClose = async () => {\r\n    const totalPlayedTime = pauseTimeCounter();\r\n    setOpen(false);\r\n    confirm_setOpen(false);\r\n\r\n    if (account) {\r\n      const options = {\r\n        mode: 'cors',\r\n        body: JSON.stringify({ sessionId, walletId: account }),\r\n      };\r\n      const headers = new Headers();\r\n      headers.append('Content-Type', 'application/json');\r\n      headers.append('Accept', 'application/json');\r\n\r\n      const finishGameResponse = await walletAuthFetchWithSigPrompt(\r\n        'Play/FinishGame',\r\n        'POST',\r\n        wipeSignatureAndReRequest,\r\n        account,\r\n        options,\r\n        true,\r\n        headers\r\n      );\r\n\r\n      if (\r\n        finishGameResponse &&\r\n        finishGameResponse.tokenCount !== profile?.tokenCount &&\r\n        profile?.tokenCount !== 5\r\n      ) {\r\n        profile.tokenCount = finishGameResponse.tokenCount;\r\n        profile.tokenType = finishGameResponse.tokenType;\r\n\r\n        dispatch({ type: 'PROFILE', payload: profile });\r\n      }\r\n    }\r\n\r\n    if (totalPlayedTime < Number(minimumTimeToPlay) * 60) {\r\n      toast.error(\r\n        `Sorry! Please play for at least ${minimumTimeToPlay} minutes for the play session to be eligible for the daily mission.`\r\n      );\r\n    }\r\n  };\r\n\r\n  const fetchCurrentGame = useCallback(async () => {\r\n    const getGameFromApi = async () => {\r\n      if (!fetchingGame) {\r\n        setFetchingGame(true);\r\n        const url = `GameManagement/GetGame/${gameId}`;\r\n        try {\r\n          const game = await walletAuthFetchWithSigPrompt(\r\n            url,\r\n            'GET',\r\n            wipeSignatureAndReRequest,\r\n            account,\r\n            null,\r\n            true,\r\n            null\r\n          );\r\n\r\n          setCurrentGame(game);\r\n          setKeyImage(\r\n            `${process.env.REACT_APP_API_URL}/${game.keyboardControlsImage}`\r\n          );\r\n        } catch (error) {\r\n          console.log('Failed to fetch game');\r\n        }\r\n      }\r\n    };\r\n\r\n    await getGameFromApi();\r\n  }, [account, fetchingGame, gameId, wipeSignatureAndReRequest]);\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n\r\n    if (gameId) {\r\n      fetchCurrentGame();\r\n    }\r\n\r\n    return () => {\r\n      _isMounted.current = false;\r\n    };\r\n  }, [fetchCurrentGame, gameId]);\r\n\r\n  const [value, setValue] = useState(0);\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  const TabSection = () => {\r\n    return (\r\n      <>\r\n        <Grid container>\r\n          <Grid item lg={12} sm={12} xs={12} className={classes.mycustomtabs}>\r\n            <Grid\r\n              item\r\n              lg={12}\r\n              md={12}\r\n              sm={12}\r\n              xs={12}\r\n              container\r\n              direction=\"row\"\r\n              className={playGameSpecificClasses.gameHeading}\r\n            >\r\n              {currentGame?.title}\r\n            </Grid>\r\n            <Tabs\r\n              value={value}\r\n              indicatorColor=\"primary\"\r\n              onChange={handleChange}\r\n              aria-label=\"disabled tabs example\"\r\n            >\r\n              <Tab\r\n                label=\"Play\"\r\n                className={playGameSpecificClasses.playInfoRow}\r\n              />\r\n              {currentGame && currentGame.highScoreCompatible && (\r\n                <Tab\r\n                  label=\"High Scores\"\r\n                  className={playGameSpecificClasses.playInfoRow}\r\n                />\r\n              )}\r\n            </Tabs>\r\n          </Grid>\r\n        </Grid>\r\n      </>\r\n    );\r\n  };\r\n\r\n  function TabPanel(tabPanelProps) {\r\n    const { children, index } = tabPanelProps;\r\n\r\n    return (\r\n      <div\r\n        role=\"tabpanel\"\r\n        hidden={value !== index}\r\n        id={`simple-tabpanel-${index}`}\r\n        aria-labelledby={`simple-tab-${index}`}\r\n      >\r\n        {value === index && (\r\n          <Box className={playGameSpecificClasses.tabWrapper}>{children}</Box>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  const PublisherInfoRow = (info) => {\r\n    // eslint-disable-next-line no-shadow\r\n    const { label, value } = info;\r\n    return (\r\n      <Grid container spacing={5} key={uuid_v4()}>\r\n        <Grid item xs={12} sm={3} lg={3}>\r\n          <span className={playGameSpecificClasses.playInfoRow}>{label}</span>\r\n        </Grid>\r\n        <Grid item xs={12} sm={9} lg={9}>\r\n          <span className={playGameSpecificClasses.playInfoRow}>{value}</span>\r\n        </Grid>\r\n      </Grid>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <BrowserView>\r\n        {!keyOpen && !open && (\r\n          <>\r\n            <div\r\n              style={{\r\n                position: 'absolute',\r\n                width: '95vw',\r\n                height: '77vh',\r\n                zIndex: '-1',\r\n              }}\r\n            >\r\n              <div\r\n                style={{\r\n                  backgroundImage: `url(${\r\n                    currentGame?.img\r\n                      ? `${process.env.REACT_APP_API_URL}/${currentGame.img}`\r\n                      : StartMainImage\r\n                  })`,\r\n                }}\r\n              />\r\n            </div>\r\n            <Box>\r\n              <TabSection />\r\n              <TabPanel value={value} index={0}>\r\n                <Grid container spacing={2}>\r\n                  <Grid\r\n                    item\r\n                    xs={12}\r\n                    sm={6}\r\n                    lg={6}\r\n                    className={playGameSpecificClasses.playInfo}\r\n                  >\r\n                    {currentGame ? (\r\n                      <>\r\n                        {currentGame?.additionalInfo?.length > 0 &&\r\n                          currentGame.additionalInfo.map((info) =>\r\n                            PublisherInfoRow(info)\r\n                          )}\r\n\r\n                        {currentGame?.additionalInfo?.length > 0 ? (\r\n                          PublisherInfoRow({\r\n                            label: 'Info',\r\n                            value: currentGame.description,\r\n                          })\r\n                        ) : (\r\n                          <CardContent className={classes.mContent}>\r\n                            <Typography\r\n                              variant=\"h4\"\r\n                              className={classes.mCurrentTitle}\r\n                            >\r\n                              {currentGame.description}\r\n                            </Typography>\r\n                          </CardContent>\r\n                        )}\r\n                      </>\r\n                    ) : (\r\n                      <>{fetchingGame && <Suspense fallback={<Spinner />} />}</>\r\n                    )}\r\n                  </Grid>\r\n                  <Grid\r\n                    item\r\n                    xs={12}\r\n                    sm={6}\r\n                    lg={6}\r\n                    className={classes.parentVideo}\r\n                  >\r\n                    <Card className={classes.root}>\r\n                      <Box className={classes.overlayPanel}>\r\n                        <CardMedia\r\n                          className={classes.media}\r\n                          image={\r\n                            currentGame?.img\r\n                              ? `${process.env.REACT_APP_API_URL}/${currentGame.img}`\r\n                              : StartMainImage\r\n                          }\r\n                          component=\"div\"\r\n                          title=\"Live Game\"\r\n                        />\r\n\r\n                        <Box className={classes.overlay}>\r\n                          <IconButton\r\n                            className={classes.playButton}\r\n                            onClick={browserPlayGame}\r\n                          >\r\n                            {isLoading ? (\r\n                              <CircularProgress color=\"secondary\" />\r\n                            ) : (\r\n                              <img src={PlayIcon} alt=\"PlayIcon Icon\" />\r\n                            )}\r\n                          </IconButton>\r\n                        </Box>\r\n                      </Box>\r\n                    </Card>\r\n                  </Grid>\r\n                </Grid>\r\n              </TabPanel>\r\n\r\n              {currentGame?.highScoreCompatible && (\r\n                <TabPanel value={value} index={1}>\r\n                  <Leaderboard\r\n                    currentGame={currentGame}\r\n                    wipeSignatureAndReRequest={wipeSignatureAndReRequest}\r\n                  />\r\n                </TabPanel>\r\n              )}\r\n            </Box>\r\n          </>\r\n        )}\r\n\r\n        {currentGame && (\r\n          <>\r\n            <Dialog\r\n              disableEscapeKeyDown\r\n              fullScreen\r\n              open={keyOpen}\r\n              TransitionComponent={Transition}\r\n            >\r\n              <AppBar className={classes.appBar}>\r\n                <Toolbar className={classes.headerTitle}>\r\n                  <IconButton\r\n                    edge=\"start\"\r\n                    color=\"inherit\"\r\n                    onClick={async () => {\r\n                      setKeyOpen(false);\r\n                    }}\r\n                    aria-label=\"close\"\r\n                  >\r\n                    <CloseIcon />\r\n                  </IconButton>\r\n                </Toolbar>\r\n              </AppBar>\r\n              <Box className={classes.keyControlContent}>\r\n                {currentGame?.joystickImage === undefined ? (\r\n                  <img\r\n                    alt={`${currentGame?.title}`}\r\n                    src={keyImage}\r\n                    className={classes.keyControlImage}\r\n                  />\r\n                ) : (\r\n                  <>\r\n                    <Button\r\n                      onClick={() =>\r\n                        setControl(control === 'key' ? 'joy' : 'key')\r\n                      }\r\n                      className={classes.controlButton}\r\n                    >\r\n                      {control === 'joy' ? 'Joy Stick' : 'Key Control'}\r\n                    </Button>\r\n                    <img\r\n                      alt={`${currentGame?.title}`}\r\n                      src={\r\n                        control === 'key'\r\n                          ? currentGame?.joystickImage\r\n                          : keyImage\r\n                      }\r\n                      className={classes.keyControlImage}\r\n                    />\r\n                  </>\r\n                )}\r\n                <Button\r\n                  onClick={continueGameHandle}\r\n                  className={classes.keyControlButton}\r\n                >\r\n                  Play\r\n                </Button>\r\n              </Box>\r\n            </Dialog>\r\n          </>\r\n        )}\r\n        <Dialog\r\n          disableEscapeKeyDown\r\n          fullScreen\r\n          open={open}\r\n          onClose={handleClose}\r\n          TransitionComponent={Transition}\r\n        >\r\n          <AppBar className={classes.appBar}>\r\n            <Toolbar className={classes.headerTitle}>\r\n              <IconButton\r\n                edge=\"start\"\r\n                color=\"inherit\"\r\n                onClick={() => {\r\n                  confirmHandleClickOpen();\r\n                }}\r\n                aria-label=\"close\"\r\n              >\r\n                <CloseIcon />\r\n              </IconButton>\r\n              <span className=\"text-center\">{currentGame?.title}</span>\r\n              <span className=\"text-center\">{timeCounter}</span>\r\n            </Toolbar>\r\n          </AppBar>\r\n          {currentGame && currentGame.gameType !== 4 && (\r\n            <Box className={clsx(classes.gameContent, dosclass.dosplayer)}>\r\n              <iframe\r\n                className=\"gameframe\"\r\n                title={currentGame.title}\r\n                src={`${process.env.REACT_APP_API_URL}/Games/${\r\n                  currentGame.baseFilePath\r\n                }?walletId=${account}&signature=${signature}&game=${\r\n                  currentGame.bundleUrl\r\n                }${\r\n                  currentGame.runFile ? `&runfile=${currentGame.runFile}` : ''\r\n                }`}\r\n                width=\"100%\"\r\n                height=\"100%\"\r\n              />\r\n            </Box>\r\n          )}\r\n          {currentGame && currentGame.gameType === 4 && (\r\n            <Box className={clsx(classes.gameContent, dosclass.dosplayer)}>\r\n              <iframe\r\n                className=\"gameframe\"\r\n                title={currentGame.title}\r\n                src={currentGame.baseFilePath}\r\n                width=\"100%\"\r\n                height=\"100%\"\r\n              />\r\n            </Box>\r\n          )}\r\n        </Dialog>\r\n        <Dialog\r\n          disableEscapeKeyDown\r\n          open={confirm_open}\r\n          onClose={confirm_handleClose}\r\n          PaperComponent={PaperComponent}\r\n          aria-labelledby=\"draggable-dialog-title\"\r\n        >\r\n          <DialogTitle style={{ cursor: 'move' }} id=\"draggable-dialog-title\">\r\n            Confirm\r\n          </DialogTitle>\r\n          <DialogContent>\r\n            <DialogContentText>\r\n              Are you ready to exit the game? Your gameplay time must exceed{' '}\r\n              {minimumTimeToPlay} minutes to earn rewards.\r\n            </DialogContentText>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button autoFocus onClick={confirm_handleClose} color=\"secondary\">\r\n              No\r\n            </Button>\r\n            <Button\r\n              onClick={handleClose}\r\n              color=\"secondary\"\r\n              className=\"playgame-close-button\"\r\n            >\r\n              Yes\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </BrowserView>\r\n      <MobileView>\r\n        {!keyOpen && !open && (\r\n          <>\r\n            <Box>\r\n              <Grid container spacing={4}>\r\n                <Grid\r\n                  item\r\n                  xs={12}\r\n                  sm={12}\r\n                  lg={12}\r\n                  className={classes.parentVideo}\r\n                >\r\n                  <Card className={classes.mRoot}>\r\n                    <Box className={classes.overlayPanel}>\r\n                      <CardMedia\r\n                        className={classes.media}\r\n                        image={\r\n                          currentGame?.img\r\n                            ? `${process.env.REACT_APP_API_URL}/${currentGame.img}`\r\n                            : StartMainImage\r\n                        }\r\n                        title=\"Live Game\"\r\n                        component=\"div\"\r\n                      >\r\n                        <Box className={classes.overlay}>\r\n                          <IconButton\r\n                            className={classes.playButton}\r\n                            onClick={mobilePlayGame}\r\n                          >\r\n                            {isLoading ? (\r\n                              <CircularProgress color=\"secondary\" />\r\n                            ) : (\r\n                              <img src={PlayIcon} alt=\"PlayIcon Icon\" />\r\n                            )}\r\n                          </IconButton>\r\n                        </Box>\r\n                      </CardMedia>\r\n                    </Box>\r\n                    <CardContent className={classes.mContent}>\r\n                      {currentGame ? (\r\n                        <CardContent className={classes.mContent}>\r\n                          <Typography\r\n                            variant=\"h4\"\r\n                            className={classes.mCurrentTitle}\r\n                          >\r\n                            {currentGame.description}\r\n                          </Typography>\r\n                        </CardContent>\r\n                      ) : (\r\n                        <>\r\n                          {fetchingGame && <Suspense fallback={<Spinner />} />}\r\n                        </>\r\n                      )}\r\n                    </CardContent>\r\n\r\n                    {currentGame?.highScoreCompatible && (\r\n                      <Leaderboard\r\n                        currentGame={currentGame}\r\n                        wipeSignatureAndReRequest={wipeSignatureAndReRequest}\r\n                      />\r\n                    )}\r\n                  </Card>\r\n                </Grid>\r\n              </Grid>\r\n            </Box>\r\n          </>\r\n        )}\r\n\r\n        <Dialog\r\n          className={modalclasses.mobileModal}\r\n          disableEscapeKeyDown\r\n          fullScreen\r\n          open={open}\r\n          onClose={handleClose}\r\n          TransitionComponent={Transition}\r\n        >\r\n          <AppBar className={classes.appBar}>\r\n            <Toolbar className={classes.headerTitle}>\r\n              <IconButton\r\n                edge=\"start\"\r\n                color=\"inherit\"\r\n                onClick={() => {\r\n                  confirmHandleClickOpen();\r\n                }}\r\n                aria-label=\"close\"\r\n              >\r\n                <CloseIcon />\r\n              </IconButton>\r\n              <span className=\"text-center\">{currentGame?.title}</span>\r\n              <span className=\"text-center\">{timeCounter}</span>\r\n            </Toolbar>\r\n          </AppBar>\r\n          {currentGame && currentGame.gameType !== 4 && (\r\n            <Box className={clsx(classes.gameContent, dosclass.dosplayer)}>\r\n              <iframe\r\n                className=\"gameframe\"\r\n                title={currentGame.title}\r\n                src={`${process.env.REACT_APP_API_URL}/Games/${\r\n                  currentGame.baseFilePath\r\n                }?walletId=${account}&signature=${signature}&game=${\r\n                  currentGame.bundleUrl\r\n                }${\r\n                  currentGame.runFile ? `&runfile=${currentGame.runFile}` : ''\r\n                }`}\r\n                width=\"100%\"\r\n                height=\"100%\"\r\n              />\r\n            </Box>\r\n          )}\r\n          {currentGame && currentGame.gameType === 4 && (\r\n            <Box className={clsx(classes.gameContent, dosclass.dosplayer)}>\r\n              <iframe\r\n                className=\"gameframe\"\r\n                title={currentGame.title}\r\n                src={currentGame.baseFilePath}\r\n                width=\"100%\"\r\n                height=\"100%\"\r\n              />\r\n            </Box>\r\n          )}\r\n        </Dialog>\r\n        <Dialog\r\n          className={modalclasses.mobileModal}\r\n          disableEscapeKeyDown\r\n          open={confirm_open}\r\n          onClose={confirm_handleClose}\r\n          PaperComponent={PaperComponent}\r\n          aria-labelledby=\"draggable-dialog-title\"\r\n        >\r\n          <DialogTitle style={{ cursor: 'move' }} id=\"draggable-dialog-title\">\r\n            Confirm\r\n          </DialogTitle>\r\n          <DialogContent>\r\n            <DialogContentText>\r\n              Are you ready to exit the game? Your gameplay time must exceed{' '}\r\n              {minimumTimeToPlay} minutes to earn rewards.\r\n            </DialogContentText>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button autoFocus onClick={confirm_handleClose} color=\"secondary\">\r\n              No\r\n            </Button>\r\n            <Button\r\n              onClick={handleClose}\r\n              color=\"secondary\"\r\n              className=\"playgame-close-button\"\r\n            >\r\n              Yes\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </MobileView>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PlayGame;\r\n","export default __webpack_public_path__ + \"static/media/goldcup.f08b38c7.png\";","export default __webpack_public_path__ + \"static/media/silvercup.ab765200.png\";","export default __webpack_public_path__ + \"static/media/bronzecup.fd633b50.png\";","export default __webpack_public_path__ + \"static/media/Profile2.140c506b.jpg\";","export default __webpack_public_path__ + \"static/media/hifiPodium.c9a26b23.png\";"],"sourceRoot":""}