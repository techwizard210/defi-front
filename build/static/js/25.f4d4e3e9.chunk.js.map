{"version":3,"sources":["pages/Competitions.js","components/GameItem.js","assets/img/hifiPodium.png"],"names":["Competitions","props","wipeSignatureAndReRequest","classes","useStyles","competitions","_useWeb3React","useWeb3React","chainId","account","_useState","useState","_useState2","_slicedToArray","activeComps","setActiveComps","_useState3","_useState4","upcomingComps","setUpcomingComps","_useState5","_useState6","endedComps","setEndedComps","_useState7","_useState8","selectedTab","setSelectedTab","fetchCompetitionData","useCallback","_asyncToGenerator","_regeneratorRuntime","mark","_callee","resp","active","upcoming","ended","oneDay","today","formatDates","wrap","_context","prev","next","walletAuthFetchWithSigPrompt","sent","Date","comps","clonedComps","index","length","daysUntilStart","Math","round","startDate","daysUntilEnd","endDate","formattedStart","moment","format","formattedEnd","_","orderBy","t0","console","log","stop","useEffect","ActivateGame","item","History","push","concat","id","compSignUp","_ref2","_callee2","compId","url","_context2","mode","_x","apply","arguments","viewCompStandings","PodiumPlayer","player","className","localPlayer","_jsxs","podiumPosition","children","_jsx","podiumAvatarWrapper","Avatar","src","playerAvatar","podiumAvatar","podiumUserName","playerName","score","style","height","prizeClassMapping","competitionList","collection","Grid","container","direction","justifyContent","alignItems","lg","md","sm","xs","Suspense","fallback","Spinner","map","data","_data$prizes","_data$stats","_data$stats$standings","_data$stats2","_data$stats3","_data$stats3$standing","_data$stats4","_data$stats5","_data$stats5$standing","_data$stats6","_data$includedGames","_data$stats7","_data$stats8","_data$stats9","Card","onClick","event","CompWrapper","backgroundImage","bannerImageUrl","CardContent","CompContent","background","marginBottom","CompTitle","name","CompActiveDates","CompLogo","competitionLogoUrl","alt","textAlign","PrizePoolHeading","prizes","sort","a","b","order","prize","prizeIndex","PrizeRow","position","reward","uuid_v4","leaderboardPodiumWrapper","spacing","leaderboardPodium","Podium","stats","standings","_Fragment","podiumSilver","podiumGold","podiumBronze","CompGamesWrapper","includedGames","perGameContainer","GameItem","ActiveGame","sponsors","CardActions","CompActions","ViewStandingsButtonWrapper","Button","size","CompStandingsButton","enrolled","EnrolledText","CompSignUpButton","mobileCompetitionList","_data$prizes2","_data$includedGames2","_data$stats10","_data$stats11","_data$stats12","CompGamesHeader","width","handleTabChange","tab","TabPanel","tabPanelProps","role","hidden","Box","BrowserView","Tabs","value","indicatorColor","onChange","centered","Tab","label","CompSectionHeader","MobileView","_ref","keyboard","DesktopMacIcon","joystick","SportsEsportsIcon","mouse","MouseIcon","process","img","title"],"mappings":"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","file":"static/js/25.f4d4e3e9.chunk.js","sourcesContent":["import { useState, useEffect, Suspense, useCallback } from 'react';\r\nimport { v4 as uuid_v4 } from 'uuid';\r\nimport { useWeb3React } from '@web3-react/core';\r\nimport _ from 'lodash';\r\nimport moment from 'moment';\r\nimport { BrowserView, MobileView } from 'react-device-detect';\r\n\r\n// ** Import Material-Ui Components\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardActions from '@material-ui/core/CardActions';\r\n// import Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Box from '@material-ui/core/Box';\r\n\r\nimport useStyles from '../assets/styles';\r\nimport Spinner from '../components/Spinner';\r\n\r\nimport GameItem from '../components/GameItem';\r\nimport Podium from '../assets/img/hifiPodium.png';\r\nimport { History } from '../theme';\r\n\r\nimport { walletAuthFetchWithSigPrompt } from '../helpers/apiFetchWrappers';\r\n\r\nconst Competitions = (props) => {\r\n  const { wipeSignatureAndReRequest } = props;\r\n\r\n  const classes = useStyles.competitions();\r\n\r\n  const { chainId, account } = useWeb3React();\r\n\r\n  const [activeComps, setActiveComps] = useState([]);\r\n  const [upcomingComps, setUpcomingComps] = useState([]);\r\n  const [endedComps, setEndedComps] = useState([]);\r\n  const [selectedTab, setSelectedTab] = useState(0);\r\n\r\n  const fetchCompetitionData = useCallback(async () => {\r\n    const url = 'Competition/GetCompetitions';\r\n    try {\r\n      const resp = await walletAuthFetchWithSigPrompt(\r\n        url,\r\n        'GET',\r\n        wipeSignatureAndReRequest,\r\n        account,\r\n        null,\r\n        true,\r\n        null\r\n      );\r\n\r\n      const competitions = resp;\r\n\r\n      if (competitions) {\r\n        const { active, upcoming, ended } = competitions;\r\n        const oneDay = 24 * 60 * 60 * 1000;\r\n        const today = new Date();\r\n\r\n        const formatDates = (comps) => {\r\n          const clonedComps = comps;\r\n          for (let index = 0; index < comps.length; index += 1) {\r\n            clonedComps[index].daysUntilStart = Math.round(\r\n              today - new Date(clonedComps[index].startDate) / oneDay\r\n            );\r\n            clonedComps[index].daysUntilEnd = Math.round(\r\n              today - new Date(clonedComps[index].endDate) / oneDay\r\n            );\r\n            clonedComps[index].formattedStart = moment(\r\n              clonedComps[index].startDate\r\n            ).format('HH:mm Do MMM');\r\n            clonedComps[index].formattedEnd = moment(\r\n              clonedComps[index].endDate\r\n            ).format('HH:mm Do MMM (UTC)');\r\n          }\r\n          return clonedComps;\r\n        };\r\n\r\n        formatDates(active);\r\n        formatDates(upcoming);\r\n        formatDates(ended);\r\n\r\n        setActiveComps(_.orderBy(active, ['endDate'], ['desc']));\r\n        setUpcomingComps(_.orderBy(upcoming, ['endDate'], ['asc']));\r\n        setEndedComps(_.orderBy(ended, ['endDate'], ['desc']));\r\n      }\r\n    } catch (error) {\r\n      console.log('Failed to load competitions');\r\n    }\r\n  }, [account, wipeSignatureAndReRequest]);\r\n\r\n  useEffect(() => {\r\n    fetchCompetitionData();\r\n  }, [chainId, fetchCompetitionData]);\r\n\r\n  const ActivateGame = (item) => {\r\n    History.push(`/play-game/${item.id}`);\r\n  };\r\n\r\n  const handleListItemClick = () => {};\r\n\r\n  const compSignUp = async (compId) => {\r\n    const url = `CompetitionParticipation/${compId}/Enrol`;\r\n    try {\r\n      const enrolled = await walletAuthFetchWithSigPrompt(\r\n        url,\r\n        'POST',\r\n        wipeSignatureAndReRequest,\r\n        account,\r\n        {\r\n          mode: 'cors',\r\n        },\r\n        false,\r\n        null\r\n      );\r\n\r\n      if (enrolled) {\r\n        fetchCompetitionData();\r\n        console.log('Successfully enrolled into competition');\r\n      }\r\n    } catch (error) {\r\n      console.log('Failed to enrol into competition');\r\n    }\r\n  };\r\n\r\n  const viewCompStandings = (compId) => {\r\n    History.push(`/competition/${compId}`);\r\n  };\r\n\r\n  const PodiumPlayer = (player, className) => {\r\n    const localPlayer = player;\r\n    return (\r\n      <div className={`${className} ${classes.podiumPosition}`}>\r\n        <div className={classes.podiumAvatarWrapper}>\r\n          <Avatar\r\n            src={localPlayer.playerAvatar}\r\n            className={classes.podiumAvatar}\r\n          />\r\n        </div>\r\n        <div className={classes.podiumUserName}>{localPlayer.playerName}</div>\r\n        <div>{localPlayer.score}</div>\r\n        <div style={{ height: '16px' }} />\r\n        <div className=\"podiumFlag\">\r\n          {/* <img src={localPlayer.flag} alt=\"Country Flag\" /> */}\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const prizeClassMapping = ['first', 'second', 'third'];\r\n  const competitionList = (collection) => {\r\n    return (\r\n      <Grid\r\n        container\r\n        direction=\"row\"\r\n        justifyContent=\"center\"\r\n        alignItems=\"center\"\r\n      >\r\n        <Grid item lg={12} md={12} sm={12} xs={12}>\r\n          {collection.length < 1 && <Suspense fallback={<Spinner />} />}\r\n          {collection.length > 0 &&\r\n            collection.map((data, index) => {\r\n              return (\r\n                <Card\r\n                  key={uuid_v4()}\r\n                  onClick={(event) => handleListItemClick(event, index)}\r\n                  className={classes.CompWrapper}\r\n                  style={{\r\n                    backgroundImage: `url(${data.bannerImageUrl}`,\r\n                  }}\r\n                >\r\n                  <CardContent\r\n                    className={classes.CompContent}\r\n                    style={{\r\n                      background: 'transparent',\r\n                    }}\r\n                  >\r\n                    {/* Heading */}\r\n                    <Grid\r\n                      container\r\n                      direction=\"row\"\r\n                      justifyContent=\"center\"\r\n                      style={{ marginBottom: '10px' }}\r\n                    >\r\n                      <Grid item lg={6} md={6} sm={12} xs={12}>\r\n                        <div>\r\n                          <span className={classes.CompTitle}>{data.name}</span>\r\n                        </div>\r\n                      </Grid>\r\n                      <Grid item lg={6} md={6} sm={12} xs={12}>\r\n                        <div>\r\n                          <div className={classes.CompActiveDates}>\r\n                            {data.formattedStart} - {data.formattedEnd}\r\n                          </div>\r\n                        </div>\r\n                      </Grid>\r\n                    </Grid>\r\n\r\n                    <Grid container direction=\"row\" justifyContent=\"center\">\r\n                      {/* Logo */}\r\n                      <Grid item lg={2} md={2} sm={2} xs={2}>\r\n                        <div>\r\n                          <img\r\n                            className={classes.CompLogo}\r\n                            src={data.competitionLogoUrl}\r\n                            alt=\"compLogo\"\r\n                          />\r\n                        </div>\r\n                      </Grid>\r\n\r\n                      {/* Prizes */}\r\n                      <Grid\r\n                        item\r\n                        lg={3}\r\n                        md={3}\r\n                        sm={3}\r\n                        xs={12}\r\n                        style={{ textAlign: 'center' }}\r\n                      >\r\n                        <div className={classes.PrizePoolHeading}>\r\n                          <span>Prize Pool</span>\r\n                        </div>\r\n\r\n                        {data?.prizes?.length > 0 &&\r\n                          data.prizes\r\n                            .sort((a, b) => (a.order > b.order ? 1 : 0))\r\n                            .map((prize, prizeIndex) => (\r\n                              <Grid\r\n                                container\r\n                                direction=\"row\"\r\n                                justifyContent=\"center\"\r\n                                key={uuid_v4()}\r\n                                className={classes.PrizeRow}\r\n                                style={{ marginBottom: '10px' }}\r\n                              >\r\n                                <Grid item lg={5} md={5} sm={5} xs={5}>\r\n                                  <span\r\n                                    className={`${\r\n                                      prizeIndex < 3\r\n                                        ? prizeClassMapping[prizeIndex]\r\n                                        : ''\r\n                                    }`}\r\n                                  >\r\n                                    {prize.position}\r\n                                  </span>\r\n                                </Grid>\r\n                                <Grid item lg={7} md={7} sm={7} xs={7}>\r\n                                  <span\r\n                                    className={`${\r\n                                      prizeIndex < 3\r\n                                        ? prizeClassMapping[prizeIndex]\r\n                                        : ''\r\n                                    }`}\r\n                                  >\r\n                                    {prize.reward}\r\n                                  </span>\r\n                                </Grid>\r\n                              </Grid>\r\n                            ))}\r\n                      </Grid>\r\n                      {/* Podium */}\r\n                      <Grid\r\n                        item\r\n                        container\r\n                        xs={3}\r\n                        sm={3}\r\n                        lg={3}\r\n                        className={classes.leaderboardPodiumWrapper}\r\n                      >\r\n                        <Grid\r\n                          container\r\n                          spacing={2}\r\n                          className={classes.leaderboardPodium}\r\n                          style={{ backgroundImage: `url(${Podium})` }}\r\n                        >\r\n                          <Grid item xs={4} sm={4} lg={4}>\r\n                            {data?.stats?.standings?.length > 1 && (\r\n                              <>\r\n                                {PodiumPlayer(\r\n                                  data?.stats?.standings[1],\r\n                                  classes.podiumSilver\r\n                                )}\r\n                              </>\r\n                            )}\r\n                          </Grid>\r\n                          <Grid item xs={4} sm={4} lg={4}>\r\n                            {data?.stats?.standings?.length > 0 && (\r\n                              <>\r\n                                {PodiumPlayer(\r\n                                  data?.stats?.standings[0],\r\n                                  classes.podiumGold\r\n                                )}\r\n                              </>\r\n                            )}\r\n                          </Grid>\r\n                          <Grid item xs={4} sm={4} lg={4}>\r\n                            {data?.stats?.standings?.length > 2 && (\r\n                              <>\r\n                                {PodiumPlayer(\r\n                                  data?.stats?.standings[2],\r\n                                  classes.podiumBronze\r\n                                )}\r\n                              </>\r\n                            )}\r\n                          </Grid>\r\n                        </Grid>\r\n                      </Grid>\r\n\r\n                      {/* GAMES */}\r\n                      <Grid item lg={4} md={4} sm={4} xs={4}>\r\n                        <div>\r\n                          <div className={classes.CompActiveDates}>\r\n                            Competition Games\r\n                          </div>\r\n                          <div className={classes.CompGamesWrapper}>\r\n                            <Grid\r\n                              container\r\n                              spacing={2}\r\n                              justifyContent=\"flex-end\"\r\n                            >\r\n                              {data.includedGames?.length > 0 &&\r\n                                data.includedGames.map((item) => (\r\n                                  <Grid\r\n                                    item\r\n                                    lg={6}\r\n                                    sm={6}\r\n                                    xs={6}\r\n                                    key={uuid_v4()}\r\n                                    className={classes.perGameContainer}\r\n                                  >\r\n                                    <GameItem\r\n                                      item={item}\r\n                                      ActiveGame={ActivateGame}\r\n                                    />\r\n                                  </Grid>\r\n                                ))}\r\n                            </Grid>\r\n                          </div>\r\n                        </div>\r\n                      </Grid>\r\n                    </Grid>\r\n                  </CardContent>\r\n                  {/* Sponsor row */}\r\n                  {data.sponsors.length > 0 && (\r\n                    <CardActions\r\n                      className={classes.CompActions}\r\n                      style={{\r\n                        background: 'transparent',\r\n                      }}\r\n                    >\r\n                      <Grid container spacing={2} justifyContent=\"flex-end\">\r\n                        <Grid item lg={3} sm={3} xs={3} />\r\n                        <Grid item lg={3} sm={3} xs={3} />\r\n                        <Grid item lg={3} sm={3} xs={3} />\r\n                        <Grid item lg={3} sm={3} xs={3} />\r\n                      </Grid>\r\n                    </CardActions>\r\n                  )}\r\n\r\n                  <CardActions\r\n                    className={classes.CompActions}\r\n                    style={{\r\n                      background: 'transparent',\r\n                    }}\r\n                  >\r\n                    <Grid container spacing={2} justifyContent=\"flex-end\">\r\n                      <Grid item lg={2} sm={2} xs={2} />\r\n                      <Grid item lg={3} sm={3} xs={3} />\r\n                      <Grid\r\n                        item\r\n                        lg={3}\r\n                        sm={3}\r\n                        xs={3}\r\n                        key={uuid_v4()}\r\n                        className={classes.ViewStandingsButtonWrapper}\r\n                      >\r\n                        <Button\r\n                          size=\"small\"\r\n                          className={classes.CompStandingsButton}\r\n                          onClick={() => viewCompStandings(data.id)}\r\n                        >\r\n                          View Standings\r\n                        </Button>\r\n                      </Grid>\r\n                      <Grid\r\n                        item\r\n                        lg={4}\r\n                        sm={4}\r\n                        xs={4}\r\n                        key={uuid_v4()}\r\n                        className={classes.perGameContainer}\r\n                      >\r\n                        {data.ended && data.stats?.enrolled && (\r\n                          <span className={classes.EnrolledText}>\r\n                            Participated\r\n                          </span>\r\n                        )}{' '}\r\n                        {!data.ended && data.stats?.enrolled && (\r\n                          <span className={classes.EnrolledText}>\r\n                            Participating\r\n                          </span>\r\n                        )}\r\n                        {account && !data.ended && !data.stats?.enrolled && (\r\n                          <Button\r\n                            size=\"small\"\r\n                            className={classes.CompSignUpButton}\r\n                            onClick={() => compSignUp(data.id)}\r\n                          >\r\n                            Sign up!\r\n                          </Button>\r\n                        )}\r\n                      </Grid>\r\n                    </Grid>\r\n                  </CardActions>\r\n                </Card>\r\n              );\r\n            })}\r\n        </Grid>\r\n      </Grid>\r\n    );\r\n  };\r\n\r\n  const mobileCompetitionList = (collection) => {\r\n    return (\r\n      <Grid\r\n        container\r\n        direction=\"row\"\r\n        justifyContent=\"center\"\r\n        alignItems=\"center\"\r\n      >\r\n        <Grid item lg={12} md={12} sm={12} xs={12}>\r\n          {collection.length < 1 && <Suspense fallback={<Spinner />} />}\r\n          {collection.length > 0 &&\r\n            collection.map((data, index) => {\r\n              return (\r\n                <Card\r\n                  key={uuid_v4()}\r\n                  onClick={(event) => handleListItemClick(event, index)}\r\n                  className={classes.CompWrapper}\r\n                  style={{\r\n                    backgroundImage: `url(${data.bannerImageUrl}`,\r\n                  }}\r\n                >\r\n                  <CardContent\r\n                    className={classes.CompContent}\r\n                    style={{\r\n                      background: 'transparent',\r\n                    }}\r\n                  >\r\n                    {/* Heading */}\r\n                    <Grid\r\n                      container\r\n                      direction=\"row\"\r\n                      justifyContent=\"center\"\r\n                      style={{ marginBottom: '10px' }}\r\n                    >\r\n                      <Grid item lg={12} md={12} sm={12} xs={12}>\r\n                        <div>\r\n                          <span className={classes.CompTitle}>{data.name}</span>\r\n                        </div>\r\n                      </Grid>\r\n                      <Grid item lg={12} md={12} sm={12} xs={12}>\r\n                        <div>\r\n                          <div className={classes.CompActiveDates}>\r\n                            {data.formattedStart} - {data.formattedEnd}\r\n                          </div>\r\n                        </div>\r\n                      </Grid>\r\n                    </Grid>\r\n\r\n                    <Grid container direction=\"row\" justifyContent=\"center\">\r\n                      {/* Logo */}\r\n                      <Grid item lg={2} md={2} sm={12} xs={12}>\r\n                        <div>\r\n                          <img\r\n                            className={classes.CompLogo}\r\n                            src={data.competitionLogoUrl}\r\n                            alt=\"compLogo\"\r\n                          />\r\n                        </div>\r\n                      </Grid>\r\n\r\n                      {/* Prizes */}\r\n                      <Grid\r\n                        item\r\n                        lg={3}\r\n                        md={3}\r\n                        sm={12}\r\n                        xs={12}\r\n                        style={{ textAlign: 'center' }}\r\n                      >\r\n                        <div className={classes.PrizePoolHeading}>\r\n                          <span>Prize Pool</span>\r\n                        </div>\r\n\r\n                        {data?.prizes?.length > 0 &&\r\n                          data.prizes\r\n                            .sort((a, b) => (a.order > b.order ? 1 : 0))\r\n                            .map((prize, prizeIndex) => (\r\n                              <Grid\r\n                                container\r\n                                direction=\"row\"\r\n                                justifyContent=\"center\"\r\n                                key={uuid_v4()}\r\n                                className={classes.PrizeRow}\r\n                              >\r\n                                <Grid item lg={3} md={3} sm={3} xs={3}>\r\n                                  <span\r\n                                    className={`${\r\n                                      prizeIndex < 3\r\n                                        ? prizeClassMapping[prizeIndex]\r\n                                        : ''\r\n                                    }`}\r\n                                  >\r\n                                    {prize.position}\r\n                                  </span>\r\n                                </Grid>\r\n                                <Grid item lg={9} md={9} sm={9} xs={9}>\r\n                                  <span\r\n                                    className={`${\r\n                                      prizeIndex < 3\r\n                                        ? prizeClassMapping[prizeIndex]\r\n                                        : ''\r\n                                    }`}\r\n                                  >\r\n                                    {prize.reward}\r\n                                  </span>\r\n                                </Grid>\r\n                              </Grid>\r\n                            ))}\r\n                      </Grid>\r\n\r\n                      {/* GAMES */}\r\n                      <Grid item lg={12} md={12} sm={12} xs={12}>\r\n                        <div>\r\n                          <div className={classes.CompGamesHeader}>\r\n                            Competition Games\r\n                          </div>\r\n                          <div className={classes.CompGamesWrapper}>\r\n                            <Grid\r\n                              container\r\n                              spacing={2}\r\n                              justifyContent=\"flex-end\"\r\n                            >\r\n                              {data.includedGames?.length > 0 &&\r\n                                data.includedGames.map((item) => (\r\n                                  <Grid\r\n                                    item\r\n                                    lg={6}\r\n                                    sm={6}\r\n                                    xs={6}\r\n                                    key={uuid_v4()}\r\n                                    className={classes.perGameContainer}\r\n                                  >\r\n                                    <GameItem\r\n                                      item={item}\r\n                                      ActiveGame={ActivateGame}\r\n                                    />\r\n                                  </Grid>\r\n                                ))}\r\n                            </Grid>\r\n                          </div>\r\n                        </div>\r\n                      </Grid>\r\n                    </Grid>\r\n                  </CardContent>\r\n                  {/* Sponsor row */}\r\n                  {data.sponsors.length > 0 && (\r\n                    <CardActions\r\n                      className={classes.CompActions}\r\n                      style={{\r\n                        background: 'transparent',\r\n                      }}\r\n                    >\r\n                      <div>\r\n                        <Button\r\n                          size=\"small\"\r\n                          className={classes.CompSignUpButton}\r\n                          onClick={() => compSignUp(data.id)}\r\n                        >\r\n                          Sign up!\r\n                        </Button>\r\n                      </div>\r\n                    </CardActions>\r\n                  )}\r\n\r\n                  <CardActions\r\n                    className={classes.CompActions}\r\n                    style={{\r\n                      background: 'transparent',\r\n                    }}\r\n                  >\r\n                    <div style={{ width: '100%' }}>\r\n                      <Button\r\n                        size=\"small\"\r\n                        className={classes.CompStandingsButton}\r\n                        onClick={() => viewCompStandings(data.id)}\r\n                      >\r\n                        View Standings\r\n                      </Button>\r\n                      {data.ended && data.stats?.enrolled && (\r\n                        <span className={classes.EnrolledText}>\r\n                          Participated\r\n                        </span>\r\n                      )}{' '}\r\n                      {!data.ended && data.stats?.enrolled && (\r\n                        <span className={classes.EnrolledText}>\r\n                          Participating\r\n                        </span>\r\n                      )}\r\n                      {account && !data.ended && !data.stats?.enrolled && (\r\n                        <Button\r\n                          size=\"small\"\r\n                          className={classes.CompSignUpButton}\r\n                          onClick={() => compSignUp(data.id)}\r\n                        >\r\n                          Sign up!\r\n                        </Button>\r\n                      )}\r\n                    </div>\r\n                  </CardActions>\r\n                </Card>\r\n              );\r\n            })}\r\n        </Grid>\r\n      </Grid>\r\n    );\r\n  };\r\n\r\n  const handleTabChange = (event, tab) => {\r\n    setSelectedTab(tab);\r\n  };\r\n\r\n  function TabPanel(tabPanelProps) {\r\n    const { children, index } = tabPanelProps;\r\n\r\n    return (\r\n      <div\r\n        role=\"tabpanel\"\r\n        hidden={selectedTab !== index}\r\n        id={`simple-tabpanel-${index}`}\r\n        aria-labelledby={`simple-tab-${index}`}\r\n      >\r\n        {selectedTab === index && <Box>{children}</Box>}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <BrowserView>\r\n        <div className=\"boost\">Competitions</div>\r\n        <Tabs\r\n          value={selectedTab}\r\n          indicatorColor=\"primary\"\r\n          onChange={handleTabChange}\r\n          centered\r\n        >\r\n          <Tab label=\"Active & Upcoming\" />\r\n          <Tab label=\"Ended\" />\r\n        </Tabs>\r\n        <TabPanel value={selectedTab} index={0}>\r\n          {activeComps?.length > 0 && (\r\n            <>\r\n              <div className={classes.CompSectionHeader}>\r\n                <span>Active</span>\r\n              </div>\r\n              <div id=\"app-signin\">\r\n                {competitionList(activeComps, 'activeComps')}\r\n              </div>\r\n            </>\r\n          )}\r\n          {upcomingComps?.length > 0 && (\r\n            <>\r\n              <div className={classes.CompSectionHeader}>\r\n                <span>Upcoming</span>\r\n              </div>\r\n              <div id=\"app-signin\">\r\n                {competitionList(upcomingComps, 'upcomingComps')}\r\n              </div>\r\n            </>\r\n          )}\r\n        </TabPanel>\r\n\r\n        <TabPanel value={selectedTab} index={1}>\r\n          <div className={classes.CompSectionHeader}>\r\n            <span>Ended</span>\r\n          </div>\r\n          <div id=\"app-signin\">{competitionList(endedComps, 'endedComps')}</div>\r\n        </TabPanel>\r\n      </BrowserView>\r\n      <MobileView>\r\n        <Tabs\r\n          value={selectedTab}\r\n          indicatorColor=\"primary\"\r\n          onChange={handleTabChange}\r\n          centered\r\n        >\r\n          <Tab label=\"Active & Upcoming\" />\r\n          <Tab label=\"Ended\" />\r\n        </Tabs>\r\n        <TabPanel value={selectedTab} index={0}>\r\n          {activeComps?.length > 0 && (\r\n            <>\r\n              <div className={classes.CompSectionHeader}>\r\n                <span>Active</span>\r\n              </div>\r\n              <div id=\"app-signin\">\r\n                {mobileCompetitionList(activeComps, 'activeComps')}\r\n              </div>\r\n            </>\r\n          )}\r\n          {upcomingComps?.length > 0 && (\r\n            <>\r\n              <div className={classes.CompSectionHeader}>\r\n                <span>Upcoming</span>\r\n              </div>\r\n              <div id=\"app-signin\">\r\n                {mobileCompetitionList(upcomingComps, 'upcomingComps')}\r\n              </div>\r\n            </>\r\n          )}\r\n        </TabPanel>\r\n\r\n        <TabPanel value={selectedTab} index={1}>\r\n          <div className={classes.CompSectionHeader}>\r\n            <span>Ended</span>\r\n          </div>\r\n          <div id=\"app-signin\">\r\n            {mobileCompetitionList(endedComps, 'endedComps')}\r\n          </div>\r\n        </TabPanel>\r\n      </MobileView>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Competitions;\r\n","import { Grid } from '@material-ui/core';\r\nimport SportsEsportsIcon from '@material-ui/icons/SportsEsports';\r\nimport DesktopMacIcon from '@material-ui/icons/DesktopMac';\r\nimport MouseIcon from '@material-ui/icons/Mouse';\r\n\r\nconst GameItem = ({ item, ActiveGame }) => {\r\n  return (\r\n    <Grid className=\"game-holder\">\r\n      <Grid className=\"game-image-wrapper\">\r\n        <Grid className=\"game-image-holder\">\r\n          <Grid className=\"game-image-overlay\">\r\n            {item?.keyboard && <DesktopMacIcon />}\r\n            {item?.joystick && <SportsEsportsIcon />}\r\n            {item?.mouse && <MouseIcon />}\r\n          </Grid>\r\n          <Grid\r\n            className=\"game-image-bg\"\r\n            style={{\r\n              backgroundImage: `url(${process.env.REACT_APP_API_URL}/${item.img})`,\r\n            }}\r\n          />\r\n          <Grid className=\"game-action gameActionIcon\">\r\n            <p className=\"playBtn\" onClick={() => ActiveGame(item)}>\r\n              Play the Game\r\n            </p>\r\n          </Grid>\r\n          <Grid className=\"game-info\">\r\n            <span className=\"game-name\">\r\n              <span>{item.title}</span>\r\n            </span>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default GameItem;\r\n","export default __webpack_public_path__ + \"static/media/hifiPodium.c9a26b23.png\";"],"sourceRoot":""}