{"version":3,"sources":["assets/img/carousel/newGameBanner.png","assets/img/carousel/APRBanner.png","pages/BrowseGame.js","components/GameItem.js"],"names":["BrowseGame","props","classes","useStyles","browseGame","backdrops","backdrop","wipeSignatureAndReRequest","_useWeb3React","useWeb3React","account","chainId","_useState","useState","_useState2","_slicedToArray","filterGames","setFilterGames","_useState3","_useState4","sliceCount","setSliceCount","_useState5","_useState6","isLoading","setLoading","SwiperCore","use","Navigation","Autoplay","Mousewheel","handleCloseBackdrop","ActiveGame","item","_item$id","id","bundleUrl","History","push","concat","goToPage","page","useEffect","fetchAPIGames","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","resp","wrap","_context","prev","next","walletAuthFetchWithSigPrompt","isMobile","sent","t0","console","log","stop","apply","arguments","window","addEventListener","wWidth","innerWidth","swiperMove","target","i","document","getElementsByClassName","length","click","DesktopBrowseGameList","_jsxs","Grid","container","spacing","children","xs","_jsx","lg","md","className","clsx","gameCarouselOption","swiperContent","recommendGames","featuredSlider","KeyboardArrowLeftIcon","onClick","prevButton","KeyboardArrowRightIcon","nextButton","Swiper","navigation","mySwiper","mousewheel","preventInteractionOnTransition","loop","autoplay","delay","disableOnInteraction","slice","map","SwiperSlide","GameItem","uuid_v4","featSwiperBg","gameOverlay","SportsEsportsIcon","gameOverlayIcon","src","process","img","alt","title","gameImage","recommendImage","backImage","sm","perGameContainer","marginZero","MobileBrowseGameList","_Fragment","BrowserView","Box","gameHeaderSection","Carousel","showThumbs","showArrows","stopOnHover","interval","infiniteLoop","emulateTouch","autoPlay","newGameBanner","role","tabIndex","APRBanner","mGameHeaderSection","pageAlert","gameListSection","Backdrop","open","style","zIndex","CircularProgress","color","MobileView","justifyContent","alignItems","keyboard","DesktopMacIcon","joystick","mouse","MouseIcon","backgroundImage"],"mappings":"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","file":"static/js/26.92d8d056.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/newGameBanner.180a4dd4.png\";","export default __webpack_public_path__ + \"static/media/APRBanner.b04f2d81.png\";","import { useEffect, useState } from 'react';\r\nimport { BrowserView, MobileView, isMobile } from 'react-device-detect';\r\nimport { Carousel } from 'react-responsive-carousel';\r\nimport { v4 as uuid_v4 } from 'uuid';\r\nimport clsx from 'clsx';\r\nimport { useWeb3React } from '@web3-react/core';\r\nimport { Swiper, SwiperSlide } from 'swiper/react';\r\nimport SwiperCore, { Navigation, Autoplay, Mousewheel } from 'swiper/core';\r\nimport Box from '@material-ui/core/Box';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nimport {\r\n  KeyboardArrowLeft as KeyboardArrowLeftIcon,\r\n  KeyboardArrowRight as KeyboardArrowRightIcon,\r\n  SportsEsports as SportsEsportsIcon,\r\n} from '@material-ui/icons';\r\n\r\nimport { History } from '../theme';\r\nimport GameItem from '../components/GameItem';\r\n\r\nimport { walletAuthFetchWithSigPrompt } from '../helpers/apiFetchWrappers';\r\n\r\nimport useStyles from '../assets/styles';\r\n\r\nimport newGameBanner from '../assets/img/carousel/newGameBanner.png';\r\nimport APRBanner from '../assets/img/carousel/APRBanner.png';\r\n\r\nconst BrowseGame = (props) => {\r\n  const classes = useStyles.browseGame();\r\n  const backdrops = useStyles.backdrop();\r\n\r\n  const { wipeSignatureAndReRequest } = props;\r\n\r\n  const { account, chainId } = useWeb3React();\r\n\r\n  const [filterGames, setFilterGames] = useState([]);\r\n\r\n  const [sliceCount, setSliceCount] = useState(8);\r\n  const [isLoading, setLoading] = useState(false);\r\n\r\n  SwiperCore.use([Navigation, Autoplay, Mousewheel]);\r\n\r\n  const handleCloseBackdrop = () => {\r\n    setLoading(false);\r\n  };\r\n\r\n  const ActiveGame = (item) => {\r\n    const id = item.id ?? item.bundleUrl;\r\n    History.push(`/play-game/${id}`);\r\n  };\r\n\r\n  const goToPage = (page) => {\r\n    History.push(`/${page}`);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetchAPIGames = async () => {\r\n      try {\r\n        const resp = await walletAuthFetchWithSigPrompt(\r\n          `GameManagement?mobile=${isMobile}`,\r\n          'GET',\r\n          wipeSignatureAndReRequest,\r\n          account,\r\n          null,\r\n          true,\r\n          null\r\n        );\r\n        const apiGamesToShow = resp;\r\n\r\n        setFilterGames(apiGamesToShow);\r\n      } catch (error) {\r\n        console.log('failed to fetch games');\r\n      }\r\n    };\r\n    fetchAPIGames();\r\n  }, [account, chainId, wipeSignatureAndReRequest]);\r\n\r\n  useEffect(() => {\r\n    window.addEventListener('resize', () => {\r\n      const wWidth = window.innerWidth;\r\n      if (wWidth >= 1300) {\r\n        setSliceCount(8);\r\n      } else if (wWidth < 1300 && wWidth >= 1000) {\r\n        setSliceCount(6);\r\n      } else if (wWidth < 1000 && wWidth >= 800) {\r\n        setSliceCount(4);\r\n      } else if (wWidth < 800 && wWidth >= 700) {\r\n        setSliceCount(2);\r\n      }\r\n    });\r\n  }, [account]);\r\n\r\n  const swiperMove = (target) => {\r\n    if (target === 'left') {\r\n      for (\r\n        let i = 0;\r\n        i < document.getElementsByClassName('swiper-button-prev').length;\r\n        i += 1\r\n      ) {\r\n        document.getElementsByClassName('swiper-button-prev')[i].click();\r\n      }\r\n    } else {\r\n      for (\r\n        let i = 0;\r\n        i < document.getElementsByClassName('swiper-button-next').length;\r\n        i += 1\r\n      ) {\r\n        document.getElementsByClassName('swiper-button-next')[i].click();\r\n      }\r\n    }\r\n  };\r\n\r\n  const DesktopBrowseGameList = () => {\r\n    return (\r\n      <Grid container spacing={2}>\r\n        <Grid container item xs={12} spacing={2}>\r\n          <Grid item lg={4} md={6} xs={12}>\r\n            <Grid\r\n              className={clsx(\r\n                classes.gameCarouselOption,\r\n                'recommendCarouselAnimation'\r\n              )}\r\n            >\r\n              <Grid className={classes.swiperContent}>\r\n                <h2 className={classes.recommendGames}>Recommended Games</h2>\r\n                <Grid className={classes.featuredSlider}>\r\n                  <KeyboardArrowLeftIcon\r\n                    onClick={() => swiperMove('left')}\r\n                    className={clsx(classes.prevButton, 'prevButton')}\r\n                  />\r\n                  <KeyboardArrowRightIcon\r\n                    onClick={() => swiperMove('right')}\r\n                    className={clsx(classes.nextButton, 'nextButton')}\r\n                  />\r\n                  <Swiper\r\n                    navigation\r\n                    className={clsx(classes.mySwiper, 'mySwiper')}\r\n                    mousewheel={false}\r\n                    preventInteractionOnTransition\r\n                    loop\r\n                    autoplay={{\r\n                      delay: 5000,\r\n                      disableOnInteraction: false,\r\n                    }}\r\n                  >\r\n                    {filterGames.slice(0, 5).map((item) => (\r\n                      <SwiperSlide key={uuid_v4()}>\r\n                        <GameItem item={item} ActiveGame={ActiveGame} />\r\n                      </SwiperSlide>\r\n                    ))}\r\n                  </Swiper>\r\n                </Grid>\r\n                <Grid className={classes.featSwiperBg}>\r\n                  <Swiper\r\n                    navigation\r\n                    loop\r\n                    autoplay={{\r\n                      delay: 5000,\r\n                      disableOnInteraction: false,\r\n                    }}\r\n                  >\r\n                    {filterGames.slice(0, 8).map((item) => (\r\n                      <SwiperSlide key={uuid_v4()}>\r\n                        <Grid className={classes.gameOverlay}>\r\n                          <SportsEsportsIcon\r\n                            className={classes.gameOverlayIcon}\r\n                          />\r\n                        </Grid>\r\n                        <img\r\n                          src={`${process.env.REACT_APP_API_URL}/${item.img}`}\r\n                          alt={item.title}\r\n                          className={clsx(\r\n                            classes.gameImage,\r\n                            classes.recommendImage,\r\n                            classes.backImage\r\n                          )}\r\n                        />\r\n                      </SwiperSlide>\r\n                    ))}\r\n                  </Swiper>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid item lg={8} md={6} xs={12}>\r\n            <Grid container spacing={isMobile === true ? 0 : 2}>\r\n              {filterGames.slice(0, sliceCount).map((item) => (\r\n                <Grid\r\n                  item\r\n                  lg={3}\r\n                  sm={6}\r\n                  xs={12}\r\n                  key={uuid_v4()}\r\n                  className={classes.perGameContainer}\r\n                >\r\n                  <GameItem item={item} ActiveGame={ActiveGame} />\r\n                </Grid>\r\n              ))}\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid container item xs={12} spacing={2} className={classes.marginZero}>\r\n          {filterGames.slice(8).map((item) => (\r\n            <Grid\r\n              item\r\n              lg={2}\r\n              sm={3}\r\n              xs={isMobile === true ? 6 : 12}\r\n              key={uuid_v4()}\r\n              className={classes.perGameContainer}\r\n            >\r\n              <GameItem item={item} ActiveGame={ActiveGame} />\r\n            </Grid>\r\n          ))}\r\n        </Grid>\r\n      </Grid>\r\n    );\r\n  };\r\n\r\n  const MobileBrowseGameList = () => {\r\n    return (\r\n      <Grid container item xs={12} spacing={2} className={classes.marginZero}>\r\n        {filterGames &&\r\n          filterGames.map((item) => (\r\n            <Grid\r\n              item\r\n              lg={2}\r\n              sm={3}\r\n              xs={isMobile === true ? 6 : 12}\r\n              key={uuid_v4()}\r\n              className={classes.perGameContainer}\r\n            >\r\n              <GameItem item={item} ActiveGame={ActiveGame} />\r\n            </Grid>\r\n          ))}\r\n        {!filterGames ||\r\n          (filterGames.length === 0 && (\r\n            <Grid\r\n              item\r\n              lg={2}\r\n              sm={3}\r\n              xs={isMobile === true ? 6 : 12}\r\n              key={uuid_v4()}\r\n              className={classes.perGameContainer}\r\n            >\r\n              No games found...\r\n            </Grid>\r\n          ))}\r\n      </Grid>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <BrowserView>\r\n        <Box>\r\n          <Grid container className={classes.gameHeaderSection}>\r\n            <Grid container item lg={12} xs={12}>\r\n              <Carousel\r\n                showThumbs={false}\r\n                showArrows={false}\r\n                stopOnHover={false}\r\n                interval={8000}\r\n                infiniteLoop\r\n                emulateTouch\r\n                autoPlay\r\n                className=\"customCarouselRoot\"\r\n              >\r\n                <div className=\"newGamesBanner\">\r\n                  <img\r\n                    alt=\"img1\"\r\n                    src={newGameBanner}\r\n                    className=\"carouselImage\"\r\n                  />\r\n                  <div className=\"newGamesWrapper\">\r\n                    <Grid container>\r\n                      <Grid item lg={3} md={3} xs={3} />\r\n                      <Grid item lg={9} md={9} xs={9}>\r\n                        <Grid container spacing={3}>\r\n                          <Grid\r\n                            item\r\n                            lg={2}\r\n                            sm={2}\r\n                            xs={2}\r\n                            key={uuid_v4()}\r\n                            className=\"bannerGameWrapper\"\r\n                          />\r\n                          {filterGames.slice(0, 3).map((item) => (\r\n                            <Grid\r\n                              item\r\n                              lg={3}\r\n                              md={3}\r\n                              sm={3}\r\n                              xs={3}\r\n                              key={uuid_v4()}\r\n                              className=\"bannerGameWrapper\"\r\n                            >\r\n                              <GameItem item={item} ActiveGame={ActiveGame} />\r\n                            </Grid>\r\n                          ))}\r\n                        </Grid>\r\n                      </Grid>\r\n                    </Grid>\r\n                  </div>\r\n                </div>\r\n                <div\r\n                  role=\"button\"\r\n                  tabIndex=\"0\"\r\n                  onClick={() => goToPage('stake-rewards')}\r\n                >\r\n                  <img\r\n                    alt=\"aprBanner\"\r\n                    src={APRBanner}\r\n                    className=\"carouselImage\"\r\n                  />\r\n                </div>\r\n              </Carousel>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid container className={classes.mGameHeaderSection}>\r\n            <div\r\n              className={classes.pageAlert}\r\n              role=\"button\"\r\n              tabIndex=\"0\"\r\n              onClick={() => goToPage('dashboard')}\r\n            >\r\n              The new earnings model is now live! Head over to the profile page\r\n              to view your active missions!\r\n            </div>\r\n          </Grid>\r\n          <Grid container className={classes.gameListSection}>\r\n            <DesktopBrowseGameList />\r\n          </Grid>\r\n        </Box>\r\n        <Backdrop\r\n          className={backdrops.backdrop}\r\n          open={isLoading}\r\n          onClick={handleCloseBackdrop}\r\n          style={{ zIndex: 999999 }}\r\n        >\r\n          <CircularProgress color=\"inherit\" />\r\n        </Backdrop>\r\n      </BrowserView>\r\n      <MobileView>\r\n        <Box>\r\n          <Grid container className={classes.mGameHeaderSection}>\r\n            <Grid container item lg={6} xs={12}>\r\n              <Carousel\r\n                showThumbs={false}\r\n                showArrows={false}\r\n                stopOnHover={false}\r\n                interval={8000}\r\n                infiniteLoop\r\n                emulateTouch\r\n                autoPlay\r\n                className=\"mCustomCarouselRoot\"\r\n              >\r\n                <div className=\"newGamesBanner\">\r\n                  <img\r\n                    alt=\"img1\"\r\n                    src={newGameBanner}\r\n                    className=\"carouselImage\"\r\n                  />\r\n                  <div className=\"newGamesWrapper\">\r\n                    <Grid container>\r\n                      <Grid item lg={3} md={3} xs={3} />\r\n                      <Grid item lg={9} md={9} xs={9}>\r\n                        <Grid container spacing={3}>\r\n                          <Grid\r\n                            item\r\n                            lg={2}\r\n                            sm={2}\r\n                            xs={2}\r\n                            key={uuid_v4()}\r\n                            className=\"bannerGameWrapper\"\r\n                          />\r\n                          {filterGames.slice(0, 3).map((item) => (\r\n                            <Grid\r\n                              item\r\n                              lg={3}\r\n                              md={3}\r\n                              sm={3}\r\n                              xs={3}\r\n                              key={uuid_v4()}\r\n                              className=\"bannerGameWrapper\"\r\n                              onClick={() => ActiveGame(item)}\r\n                            >\r\n                              <img\r\n                                src={`${process.env.REACT_APP_API_URL}/${item.img}`}\r\n                                alt=\"newGames\"\r\n                                onClick={() => ActiveGame(item)}\r\n                              />\r\n                            </Grid>\r\n                          ))}\r\n                        </Grid>\r\n                      </Grid>\r\n                    </Grid>\r\n                  </div>\r\n                </div>\r\n                <div\r\n                  role=\"button\"\r\n                  tabIndex=\"0\"\r\n                  onClick={() => goToPage('stake-rewards')}\r\n                >\r\n                  <img\r\n                    alt=\"aprBanner\"\r\n                    src={APRBanner}\r\n                    className=\"carouselImage\"\r\n                  />\r\n                </div>\r\n              </Carousel>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid\r\n            container\r\n            className={classes.mGameHeaderSection}\r\n            justifyContent=\"center\"\r\n            alignItems=\"center\"\r\n          >\r\n            <div\r\n              className={classes.pageAlert}\r\n              role=\"button\"\r\n              tabIndex=\"0\"\r\n              onClick={() => goToPage('dashboard')}\r\n            >\r\n              The new earnings model is now live! Head over to the profile page\r\n              to view your active missions!\r\n            </div>\r\n          </Grid>\r\n          <Grid container className={classes.mGameHeaderSection}>\r\n            <MobileBrowseGameList />\r\n          </Grid>\r\n        </Box>\r\n        <Backdrop\r\n          className={backdrops.backdrop}\r\n          open={isLoading}\r\n          onClick={handleCloseBackdrop}\r\n          style={{ zIndex: 999999 }}\r\n        >\r\n          <CircularProgress color=\"inherit\" />\r\n        </Backdrop>\r\n      </MobileView>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BrowseGame;\r\n","import { Grid } from '@material-ui/core';\r\nimport SportsEsportsIcon from '@material-ui/icons/SportsEsports';\r\nimport DesktopMacIcon from '@material-ui/icons/DesktopMac';\r\nimport MouseIcon from '@material-ui/icons/Mouse';\r\n\r\nconst GameItem = ({ item, ActiveGame }) => {\r\n  return (\r\n    <Grid className=\"game-holder\">\r\n      <Grid className=\"game-image-wrapper\">\r\n        <Grid className=\"game-image-holder\">\r\n          <Grid className=\"game-image-overlay\">\r\n            {item?.keyboard && <DesktopMacIcon />}\r\n            {item?.joystick && <SportsEsportsIcon />}\r\n            {item?.mouse && <MouseIcon />}\r\n          </Grid>\r\n          <Grid\r\n            className=\"game-image-bg\"\r\n            style={{\r\n              backgroundImage: `url(${process.env.REACT_APP_API_URL}/${item.img})`,\r\n            }}\r\n          />\r\n          <Grid className=\"game-action gameActionIcon\">\r\n            <p className=\"playBtn\" onClick={() => ActiveGame(item)}>\r\n              Play the Game\r\n            </p>\r\n          </Grid>\r\n          <Grid className=\"game-info\">\r\n            <span className=\"game-name\">\r\n              <span>{item.title}</span>\r\n            </span>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default GameItem;\r\n"],"sourceRoot":""}