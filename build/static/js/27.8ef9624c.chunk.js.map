{"version":3,"sources":["components/SingleActionModal.js","pages/Guilds/Tavern/Dialogs/AcceptScholarOfferDialog.js","pages/Guilds/Tavern/Dialogs/PickNFTDialog.js","pages/Guilds/Tavern/Dialogs/AcceptWorkOfferDialog.js","pages/Guilds/Tavern/ContractList.js","pages/Guilds/Tavern/Dialogs/ScholarOfferDialog.js","pages/Guilds/Tavern/Dialogs/WorkOfferDialog.js","pages/Guilds/Tavern/index.js"],"names":["SingleActionModal","props","open","handleClose","messageWording","action","modalTitle","actionWording","actionClass","executeAction","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","stop","apply","arguments","_jsxs","Dialog","fullWidth","maxWidth","onClose","className","children","_jsx","DialogTitle","id","style","textAlign","DialogContent","DialogActions","Button","onClick","color","AcceptScholarOfferDialog","wipeSignatureAndReRequest","contract","account","useWeb3React","_useState","useState","_useState2","_slicedToArray","scholarshipOffer","setScholarshipOffer","acceptOffer","acceptOfferResp","walletAuthFetchWithSigPrompt","concat","sent","success","toast","error","t0","console","log","getScholarshipOffer","useCallback","_callee2","contractType","contractFetchQuery","options","headers","resp","_context2","ContractId","Type","mode","body","JSON","stringify","Headers","append","useEffect","_init","_callee3","_context3","init","Grid","container","item","lg","md","sm","xs","guildName","nftName","commissionRate","canAction","PickNFTDialog","nfts","setNfts","_useState3","_useState4","nftsFetched","setNftsFetched","_useState5","_useState6","selectedNFT","setSelectedNFT","getAvailableNFTs","length","map","nft","_nft$scholarSlots","gamingNFTId","src","process","image","alt","width","name","scholarSlots","maxScholarSlots","_Fragment","uuid_v4","nftResult","AcceptWorkOfferDialog","_selectedNFT$scholarS","workOffer","setWorkOffer","openModal","setOpenModal","handleModalOpen","handleModalClose","_ref2","event","_x","_x2","_ref3","acceptWorkOfferReq","GamingNFTId","getWorkOfferOffer","_callee4","workOfferResp","_context4","_callee5","_context5","playerName","SearchContractForm","MinCommission","MaxCommission","IncludeExpired","OrderByField","OrderByDirection","ResultsPerPage","PageNo","ContractList","refreshList","setRefreshList","setCanCreateScholarOffer","setCanCreateWorkOffer","tavernData","setTavernData","_useWeb3React","chainId","tavernQuery","_useState7","_useState8","selectedContract","setSelectedContract","modalName","getTavernData","query","canCreateScholarOffers","canCreateWorkOffer","cancelWorkOffer","_ref4","cancelResponse","cancelScholarOffer","_ref5","columns","selector","c","center","sortable","cell","row","displayName","listingCreated","moment","format","canCancel","Box","DataTable","data","contracts","pagination","theme","highlightOnHover","noDataComponent","ScholarOfferDialog","setCommissionRate","createScholarOffer","scholarOffer","scholOfferResp","CommissionRate","TextField","autoFocus","margin","label","type","value","onChange","e","target","WorkOfferDialog","makeWorkOffer","Tavern","canCreateScholarOffer","isMobile","disabled"],"mappings":"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","file":"static/js/27.8ef9624c.chunk.js","sourcesContent":["// ** Import Material-Ui Components\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\nconst SingleActionModal = (props) => {\r\n  const {\r\n    open,\r\n    handleClose,\r\n    messageWording,\r\n    action,\r\n    modalTitle,\r\n    actionWording,\r\n    actionClass,\r\n  } = props;\r\n\r\n  const executeAction = async () => {\r\n    action();\r\n  };\r\n  return (\r\n    <Dialog\r\n      fullWidth\r\n      maxWidth=\"sm\"\r\n      open={open}\r\n      onClose={handleClose}\r\n      aria-labelledby=\"max-width-dialog-title\"\r\n      className=\"profileModal\"\r\n    >\r\n      <DialogTitle id=\"max-width-dialog-title\" style={{ textAlign: 'center' }}>\r\n        {modalTitle}\r\n      </DialogTitle>\r\n      <DialogContent className=\"body\">{messageWording}</DialogContent>\r\n      <DialogActions>\r\n        <Button\r\n          onClick={executeAction}\r\n          color=\"primary\"\r\n          className={actionClass ?? 'accept'}\r\n        >\r\n          {actionWording}\r\n        </Button>\r\n        <Button onClick={handleClose} color=\"primary\">\r\n          Close\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default SingleActionModal;\r\n","import { useState, useEffect, useCallback } from 'react';\r\nimport { useWeb3React } from '@web3-react/core';\r\nimport { toast } from 'react-toastify';\r\n\r\n// ** Import Material-Ui Components\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport { Grid } from '@material-ui/core';\r\n\r\nimport { walletAuthFetchWithSigPrompt } from '../../../../helpers/apiFetchWrappers';\r\n\r\nconst AcceptScholarOfferDialog = (props) => {\r\n  const { open, handleClose, wipeSignatureAndReRequest, contract } = props;\r\n\r\n  const { account } = useWeb3React();\r\n\r\n  const [scholarshipOffer, setScholarshipOffer] = useState(null);\r\n\r\n  const acceptOffer = async () => {\r\n    try {\r\n      const acceptOfferResp = await walletAuthFetchWithSigPrompt(\r\n        `Tavern/AcceptScholarshipOffer?contractId=${contract.id}`,\r\n        'POST',\r\n        wipeSignatureAndReRequest,\r\n        account,\r\n        null,\r\n        false,\r\n        null\r\n      );\r\n\r\n      if (acceptOfferResp) {\r\n        if (acceptOfferResp.success) {\r\n          toast.success('Accepted scholarship offer');\r\n          handleClose();\r\n        } else {\r\n          toast.error(acceptOfferResp.error);\r\n          handleClose();\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.log('failed to accept scholar offer');\r\n    }\r\n  };\r\n\r\n  const getScholarshipOffer = useCallback(async () => {\r\n    try {\r\n      const { id, contractType } = contract;\r\n\r\n      const contractFetchQuery = {\r\n        ContractId: id,\r\n        Type: contractType,\r\n      };\r\n\r\n      const options = {\r\n        mode: 'cors',\r\n        body: JSON.stringify(contractFetchQuery),\r\n      };\r\n\r\n      const headers = new Headers();\r\n      headers.append('Content-Type', 'application/json');\r\n      headers.append('Accept', 'application/json');\r\n\r\n      const resp = await walletAuthFetchWithSigPrompt(\r\n        `Tavern/GetContract`,\r\n        'POST',\r\n        wipeSignatureAndReRequest,\r\n        account,\r\n        options,\r\n        false,\r\n        headers\r\n      );\r\n\r\n      if (resp) {\r\n        setScholarshipOffer(resp);\r\n      }\r\n    } catch (error) {\r\n      console.log('failed to fetch scholarship offer');\r\n    }\r\n  }, [contract, wipeSignatureAndReRequest, account]);\r\n\r\n  useEffect(() => {\r\n    async function init() {\r\n      await getScholarshipOffer();\r\n    }\r\n    if (account && contract && contract.contractType === 0) {\r\n      init();\r\n    }\r\n  }, [account, getScholarshipOffer, contract]);\r\n\r\n  return (\r\n    <Dialog\r\n      fullWidth\r\n      maxWidth=\"sm\"\r\n      open={open}\r\n      onClose={handleClose}\r\n      aria-labelledby=\"max-width-dialog-title\"\r\n      className=\"guildManagementModal scholOfferModal\"\r\n    >\r\n      <DialogTitle id=\"max-width-dialog-title\" style={{ textAlign: 'center' }}>\r\n        View Scholarship Offer\r\n      </DialogTitle>\r\n      <DialogContent className=\"body\">\r\n        <Grid container>\r\n          {scholarshipOffer && (\r\n            <Grid item container lg={12} md={12} sm={12} xs={12}>\r\n              <Grid\r\n                item\r\n                lg={12}\r\n                md={12}\r\n                sm={12}\r\n                xs={12}\r\n                className=\"offerDetails\"\r\n              >\r\n                <p>\r\n                  This is a scholarship contract at [\r\n                  {scholarshipOffer.guildName}] on the NFT [\r\n                  {scholarshipOffer.nftName}].\r\n                </p>\r\n                <p>\r\n                  They are offering a commission rate of:{' '}\r\n                  {scholarshipOffer.commissionRate}%.\r\n                </p>\r\n                <p>\r\n                  This means for every 100 HiFi you earn:\r\n                  <ul>\r\n                    <li>\r\n                      You will get: {100 - scholarshipOffer.commissionRate} HiFi\r\n                    </li>\r\n                    <li>\r\n                      The NFT owner will get: {scholarshipOffer.commissionRate}{' '}\r\n                      HiFi\r\n                    </li>\r\n                  </ul>\r\n                </p>\r\n              </Grid>\r\n              {scholarshipOffer.canAction && (\r\n                <Grid item lg={12} md={12} sm={12} xs={12} className=\"actions\">\r\n                  <Button onClick={() => acceptOffer()} className=\"accept\">\r\n                    Accept Offer\r\n                  </Button>\r\n                </Grid>\r\n              )}\r\n              {!scholarshipOffer.canAction && (\r\n                <div className=\"offerNotActive\">\r\n                  Scholarship offer no longer active or you don&apos;t have\r\n                  permission to accept the contract\r\n                </div>\r\n              )}\r\n            </Grid>\r\n          )}\r\n        </Grid>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={handleClose} color=\"primary\" className=\"close\">\r\n          Close\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default AcceptScholarOfferDialog;\r\n","import { useState, useCallback, useEffect } from 'react';\r\nimport { useWeb3React } from '@web3-react/core';\r\nimport { v4 as uuid_v4 } from 'uuid';\r\n\r\n// ** Import Material-Ui Components\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport { Grid } from '@material-ui/core';\r\nimport { walletAuthFetchWithSigPrompt } from '../../../../helpers/apiFetchWrappers';\r\n\r\nconst PickNFTDialog = (props) => {\r\n  const { open, handleClose, wipeSignatureAndReRequest } = props;\r\n\r\n  const { account } = useWeb3React();\r\n  const [nfts, setNfts] = useState(null);\r\n  const [nftsFetched, setNftsFetched] = useState(null);\r\n\r\n  const [selectedNFT, setSelectedNFT] = useState(null);\r\n\r\n  const getAvailableNFTs = useCallback(async () => {\r\n    try {\r\n      const resp = await walletAuthFetchWithSigPrompt(\r\n        'Tavern/GetAvailableNFTs',\r\n        'GET',\r\n        wipeSignatureAndReRequest,\r\n        account,\r\n        null,\r\n        false,\r\n        null\r\n      );\r\n\r\n      setNfts(resp);\r\n      setNftsFetched(true);\r\n    } catch (error) {\r\n      console.log('failed to fetch available scholars');\r\n    }\r\n  }, [account, wipeSignatureAndReRequest]);\r\n\r\n  useEffect(() => {\r\n    async function init() {\r\n      await getAvailableNFTs();\r\n    }\r\n    if (account) {\r\n      init();\r\n    }\r\n  }, [account, getAvailableNFTs, wipeSignatureAndReRequest]);\r\n\r\n  const nftResult = (nft) => (\r\n    <Grid\r\n      item\r\n      container\r\n      lg={12}\r\n      md={12}\r\n      sm={12}\r\n      xs={12}\r\n      key={uuid_v4()}\r\n      className={`${\r\n        selectedNFT !== null && selectedNFT.gamingNFTId === nft.gamingNFTId\r\n          ? 'selected'\r\n          : ''\r\n      }`}\r\n    >\r\n      <Grid item container lg={9} md={9} sm={9} xs={9} className=\"name\">\r\n        <Grid item lg={2} md={2} sm={2} xs={2} className=\"image\">\r\n          <img\r\n            src={`${process.env.REACT_APP_API_URL}/${nft.image}`}\r\n            alt=\"nftImg\"\r\n            style={{ width: '100%' }}\r\n          />\r\n        </Grid>\r\n        <Grid\r\n          item\r\n          container\r\n          lg={10}\r\n          md={10}\r\n          sm={10}\r\n          xs={10}\r\n          className=\"nftInfo\"\r\n        >\r\n          <Grid item lg={12} md={12} sm={12} xs={12} className=\"name\">\r\n            {nft.name}\r\n          </Grid>\r\n          <Grid\r\n            item\r\n            container\r\n            lg={12}\r\n            md={12}\r\n            sm={12}\r\n            xs={12}\r\n            className=\"scholarSlots\"\r\n          >\r\n            <i className=\"fa-solid fa-user-graduate icon\" />\r\n            Scholar Slots {nft.scholarSlots ?? 0} / {nft.maxScholarSlots}\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n      <Grid item lg={3} md={3} sm={3} xs={3} className=\"nftAction\">\r\n        {(selectedNFT === null ||\r\n          selectedNFT.gamingNFTId !== nft.gamingNFTId) &&\r\n          nft.scholarSlots < nft.maxScholarSlots && (\r\n            <Button onClick={() => setSelectedNFT(nft)}>Select</Button>\r\n          )}\r\n        {selectedNFT !== null &&\r\n          selectedNFT.gamingNFTId === nft.gamingNFTId && <>Selected</>}\r\n        {nft.scholarSlots === nft.maxScholarSlots && <>NFT Full</>}\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n\r\n  return (\r\n    <Dialog\r\n      fullWidth\r\n      maxWidth=\"sm\"\r\n      open={open}\r\n      onClose={handleClose}\r\n      aria-labelledby=\"max-width-dialog-title\"\r\n      className=\"guildModal scholOfferModal\"\r\n    >\r\n      <DialogTitle id=\"max-width-dialog-title\" style={{ textAlign: 'center' }}>\r\n        Select NFT\r\n      </DialogTitle>\r\n      <DialogContent className=\"body\">\r\n        <Grid container>\r\n          <Grid item lg={12} md={12} sm={12} xs={12} className=\"nftListWrapper\">\r\n            {nftsFetched &&\r\n              nfts?.length > 0 &&\r\n              nfts.map((nft) => nftResult(nft))}\r\n          </Grid>\r\n        </Grid>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        {selectedNFT !== null && (\r\n          <Button\r\n            onClick={() => handleClose(null, selectedNFT)}\r\n            color=\"primary\"\r\n          >\r\n            Select NFT\r\n          </Button>\r\n        )}\r\n        <Button onClick={handleClose} color=\"primary\" className=\"close\">\r\n          Close\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default PickNFTDialog;\r\n","import { useState, useEffect, useCallback } from 'react';\r\nimport { useWeb3React } from '@web3-react/core';\r\nimport { toast } from 'react-toastify';\r\n\r\n// ** Import Material-Ui Components\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport { Grid } from '@material-ui/core';\r\n\r\nimport { walletAuthFetchWithSigPrompt } from '../../../../helpers/apiFetchWrappers';\r\nimport PickNFTDialog from './PickNFTDialog';\r\n\r\nconst AcceptWorkOfferDialog = (props) => {\r\n  const { open, handleClose, wipeSignatureAndReRequest, contract } = props;\r\n\r\n  const { account } = useWeb3React();\r\n\r\n  const [workOffer, setWorkOffer] = useState(null);\r\n\r\n  const [selectedNFT, setSelectedNFT] = useState(null);\r\n  const [openModal, setOpenModal] = useState(false);\r\n\r\n  const handleModalOpen = async () => {\r\n    setOpenModal(true);\r\n  };\r\n\r\n  const handleModalClose = async (event, nft) => {\r\n    if (nft) {\r\n      setSelectedNFT(nft);\r\n    }\r\n    setOpenModal(false);\r\n  };\r\n\r\n  const acceptOffer = async () => {\r\n    try {\r\n      const acceptWorkOfferReq = {\r\n        ContractId: contract.id,\r\n        GamingNFTId: selectedNFT.gamingNFTId,\r\n      };\r\n\r\n      const headers = new Headers();\r\n      headers.append('Content-Type', 'application/json');\r\n      headers.append('Accept', 'application/json');\r\n\r\n      const options = {\r\n        mode: 'cors',\r\n        body: JSON.stringify(acceptWorkOfferReq),\r\n      };\r\n\r\n      const acceptOfferResp = await walletAuthFetchWithSigPrompt(\r\n        `Tavern/AcceptWorkOffer`,\r\n        'POST',\r\n        wipeSignatureAndReRequest,\r\n        account,\r\n        options,\r\n        false,\r\n        headers\r\n      );\r\n\r\n      if (acceptOfferResp) {\r\n        if (acceptOfferResp.success) {\r\n          toast.success('Accepted work offer');\r\n          handleClose();\r\n        } else {\r\n          toast.error(acceptOfferResp.error);\r\n          handleClose();\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.log('failed to accept work offer');\r\n    }\r\n  };\r\n\r\n  const getWorkOfferOffer = useCallback(async () => {\r\n    try {\r\n      const { id, contractType } = contract;\r\n\r\n      const contractFetchQuery = {\r\n        ContractId: id,\r\n        Type: contractType,\r\n      };\r\n\r\n      const options = {\r\n        mode: 'cors',\r\n        body: JSON.stringify(contractFetchQuery),\r\n      };\r\n\r\n      const headers = new Headers();\r\n      headers.append('Content-Type', 'application/json');\r\n      headers.append('Accept', 'application/json');\r\n\r\n      const workOfferResp = await walletAuthFetchWithSigPrompt(\r\n        `Tavern/GetContract`,\r\n        'POST',\r\n        wipeSignatureAndReRequest,\r\n        account,\r\n        options,\r\n        false,\r\n        headers\r\n      );\r\n\r\n      if (workOfferResp) {\r\n        setWorkOffer(workOfferResp);\r\n      }\r\n    } catch (error) {\r\n      console.log('failed to fetch work offer');\r\n    }\r\n  }, [contract, wipeSignatureAndReRequest, account]);\r\n\r\n  useEffect(() => {\r\n    async function init() {\r\n      await getWorkOfferOffer();\r\n    }\r\n    if (account && contract && contract.contractType === 1) {\r\n      init();\r\n    }\r\n  }, [account, getWorkOfferOffer, contract]);\r\n\r\n  return (\r\n    <>\r\n      <Dialog\r\n        fullWidth\r\n        maxWidth=\"sm\"\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"max-width-dialog-title\"\r\n        className=\"guildModal scholOfferModal\"\r\n      >\r\n        <DialogTitle\r\n          id=\"max-width-dialog-title\"\r\n          style={{ textAlign: 'center' }}\r\n        >\r\n          Accept Work Offer\r\n        </DialogTitle>\r\n        <DialogContent className=\"body\">\r\n          <Grid container>\r\n            {workOffer && (\r\n              <Grid item container lg={12} md={12} sm={12} xs={12}>\r\n                <Grid\r\n                  item\r\n                  lg={12}\r\n                  md={12}\r\n                  sm={12}\r\n                  xs={12}\r\n                  className=\"offerDetails\"\r\n                >\r\n                  <p>This is a work offer from [{workOffer.playerName}].</p>\r\n                  <p>\r\n                    They are offering a commission rate of:{' '}\r\n                    {workOffer.commissionRate}%.\r\n                  </p>\r\n                  <div>\r\n                    This means for every 100 HiFi you earn:\r\n                    <ul>\r\n                      <li>\r\n                        You will get: {100 - workOffer.commissionRate} HiFi\r\n                      </li>\r\n                      <li>\r\n                        The NFT owner will get: {workOffer.commissionRate} HiFi\r\n                      </li>\r\n                    </ul>\r\n                  </div>\r\n                </Grid>\r\n                <Grid item container lg={12} md={12} sm={12} xs={12}>\r\n                  <Grid\r\n                    item\r\n                    container\r\n                    lg={8}\r\n                    md={8}\r\n                    sm={8}\r\n                    xs={8}\r\n                    className=\"nftDetails\"\r\n                  >\r\n                    {selectedNFT && (\r\n                      <>\r\n                        <Grid\r\n                          item\r\n                          lg={2}\r\n                          md={2}\r\n                          sm={2}\r\n                          xs={2}\r\n                          className=\"image\"\r\n                        >\r\n                          <img\r\n                            src={`${process.env.REACT_APP_API_URL}/${selectedNFT.image}`}\r\n                            alt=\"nftImg\"\r\n                            style={{ width: '100%' }}\r\n                          />\r\n                        </Grid>\r\n                        <Grid\r\n                          item\r\n                          container\r\n                          lg={10}\r\n                          md={10}\r\n                          sm={10}\r\n                          xs={10}\r\n                          className=\"nftInfo\"\r\n                        >\r\n                          <Grid\r\n                            item\r\n                            lg={12}\r\n                            md={12}\r\n                            sm={12}\r\n                            xs={12}\r\n                            className=\"name\"\r\n                          >\r\n                            {selectedNFT.name}\r\n                          </Grid>\r\n                          <Grid\r\n                            item\r\n                            container\r\n                            lg={12}\r\n                            md={12}\r\n                            sm={12}\r\n                            xs={12}\r\n                            className=\"scholarSlots\"\r\n                          >\r\n                            <i className=\"fa-solid fa-user-graduate icon\" />\r\n                            Scholar Slots {selectedNFT.scholarSlots ?? 0} /{' '}\r\n                            {selectedNFT.maxScholarSlots}\r\n                          </Grid>\r\n                        </Grid>\r\n                      </>\r\n                    )}\r\n                    {!selectedNFT && <>No NFT Selected</>}\r\n                  </Grid>\r\n                  <Grid item lg={4} md={4} sm={4} xs={4} className=\"nftAction\">\r\n                    {selectedNFT && (\r\n                      <Button onClick={handleModalOpen}>Change NFT</Button>\r\n                    )}\r\n                    {!selectedNFT && (\r\n                      <Button onClick={handleModalOpen}>Select NFT</Button>\r\n                    )}\r\n                  </Grid>\r\n                </Grid>\r\n\r\n                {!workOffer.canAction && (\r\n                  <div className=\"offerNotActive\">\r\n                    Work offer no longer active or you don&apos;t have\r\n                    permission to accept the contract\r\n                  </div>\r\n                )}\r\n              </Grid>\r\n            )}\r\n          </Grid>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          {workOffer?.canAction && selectedNFT && (\r\n            <Button onClick={() => acceptOffer()} className=\"accept\">\r\n              Accept Offer\r\n            </Button>\r\n          )}\r\n          <Button onClick={handleClose} color=\"primary\" className=\"close\">\r\n            Close\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n      <PickNFTDialog open={openModal} handleClose={handleModalClose} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AcceptWorkOfferDialog;\r\n","/* eslint-disable react/destructuring-assignment */\r\nimport { useEffect, useState, useCallback } from 'react';\r\n// import { BrowserView } from 'react-device-detect';\r\n// import { v4 as uuid_v4 } from 'uuid';\r\nimport { useWeb3React } from '@web3-react/core';\r\nimport { toast } from 'react-toastify';\r\n\r\nimport Box from '@material-ui/core/Box';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nimport moment from 'moment';\r\n\r\nimport DataTable from 'react-data-table-component';\r\n\r\nimport { Button } from '@material-ui/core';\r\n\r\nimport { walletAuthFetchWithSigPrompt } from '../../../helpers/apiFetchWrappers';\r\nimport AcceptScholarOfferDialog from './Dialogs/AcceptScholarOfferDialog';\r\nimport SingleActionModal from '../../../components/SingleActionModal';\r\nimport AcceptWorkOfferDialog from './Dialogs/AcceptWorkOfferDialog';\r\n\r\nconst SearchContractForm = {\r\n  MinCommission: null,\r\n  MaxCommission: null,\r\n  IncludeExpired: false,\r\n  OrderByField: 'ListingCreated',\r\n  OrderByDirection: 'desc',\r\n  ResultsPerPage: 20,\r\n  PageNo: 1,\r\n};\r\n\r\nconst ContractList = (props) => {\r\n  const {\r\n    wipeSignatureAndReRequest,\r\n    refreshList,\r\n    setRefreshList,\r\n    setCanCreateScholarOffer,\r\n    setCanCreateWorkOffer,\r\n  } = props;\r\n  const [tavernData, setTavernData] = useState(null);\r\n\r\n  const { account, chainId } = useWeb3React();\r\n\r\n  // eslint-disable-next-line no-unused-vars\r\n  const [tavernQuery, setTavernQuery] = useState(SearchContractForm);\r\n\r\n  const [openModal, setOpenModal] = useState(null);\r\n  const [selectedContract, setSelectedContract] = useState(null);\r\n\r\n  const handleModalOpen = async (contract, modalName) => {\r\n    setSelectedContract(contract);\r\n    setOpenModal(modalName);\r\n  };\r\n\r\n  const getTavernData = useCallback(async () => {\r\n    try {\r\n      const query = tavernQuery;\r\n      const options = {\r\n        mode: 'cors',\r\n        body: JSON.stringify(query),\r\n      };\r\n\r\n      const headers = new Headers();\r\n      headers.append('Content-Type', 'application/json');\r\n      headers.append('Accept', 'application/json');\r\n\r\n      const resp = await walletAuthFetchWithSigPrompt(\r\n        `Tavern/Overview`,\r\n        'POST',\r\n        wipeSignatureAndReRequest,\r\n        account,\r\n        options,\r\n        true,\r\n        headers\r\n      );\r\n\r\n      setTavernData(resp);\r\n      setCanCreateScholarOffer(resp.canCreateScholarOffers);\r\n      setCanCreateWorkOffer(resp.canCreateWorkOffer);\r\n    } catch (error) {\r\n      console.log('failed to fetch tavern data');\r\n    }\r\n  }, [\r\n    account,\r\n    setCanCreateScholarOffer,\r\n    setCanCreateWorkOffer,\r\n    tavernQuery,\r\n    wipeSignatureAndReRequest,\r\n  ]);\r\n\r\n  const handleModalClose = async () => {\r\n    setSelectedContract(null);\r\n    setOpenModal(null);\r\n    getTavernData();\r\n  };\r\n\r\n  const cancelWorkOffer = async () => {\r\n    try {\r\n      const options = {\r\n        mode: 'cors',\r\n      };\r\n\r\n      const cancelResponse = await walletAuthFetchWithSigPrompt(\r\n        `Tavern/CancelWorkOffer?contractId=${selectedContract.id}`,\r\n        'DELETE',\r\n        wipeSignatureAndReRequest,\r\n        account,\r\n        options,\r\n        false,\r\n        null\r\n      );\r\n      if (cancelResponse) {\r\n        if (cancelResponse?.success) {\r\n          toast.success('Work offer cancelled');\r\n        } else {\r\n          toast.error(cancelResponse.error);\r\n        }\r\n        handleModalClose();\r\n      }\r\n    } catch (error) {\r\n      console.log('failed to cancel work offer');\r\n    }\r\n  };\r\n\r\n  const cancelScholarOffer = async () => {\r\n    try {\r\n      const options = {\r\n        mode: 'cors',\r\n      };\r\n\r\n      const cancelResponse = await walletAuthFetchWithSigPrompt(\r\n        `Tavern/CancelScholarOffer?contractId=${selectedContract.id}`,\r\n        'DELETE',\r\n        wipeSignatureAndReRequest,\r\n        account,\r\n        options,\r\n        false,\r\n        null\r\n      );\r\n      if (cancelResponse) {\r\n        if (cancelResponse?.success) {\r\n          toast.success('Scholar offer cancelled');\r\n        } else {\r\n          toast.error(cancelResponse.error);\r\n        }\r\n        handleModalClose();\r\n      }\r\n    } catch (error) {\r\n      console.log('failed to cancel scholar offer');\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getTavernData();\r\n  }, [account, chainId, getTavernData, wipeSignatureAndReRequest, refreshList]);\r\n\r\n  useEffect(() => {\r\n    if (refreshList) {\r\n      getTavernData();\r\n      setRefreshList(false);\r\n    }\r\n  }, [getTavernData, refreshList, setRefreshList]);\r\n\r\n  const columns = [\r\n    {\r\n      name: 'Contract Type',\r\n      selector: (c) => c.contractType,\r\n      center: true,\r\n      sortable: true,\r\n      cell: (row) => (\r\n        <>\r\n          {row.contractType === 0 && (\r\n            <>\r\n              <i className=\"fa-solid fa-user-graduate icon\" />\r\n              Scholar Offer\r\n            </>\r\n          )}\r\n          {row.contractType === 1 && (\r\n            <>\r\n              <i className=\"fa-solid fa-briefcase\" />\r\n              Work Offer\r\n            </>\r\n          )}\r\n        </>\r\n      ),\r\n    },\r\n    {\r\n      name: 'Hiring Guild / Player Name',\r\n      selector: (c) => c.displayName,\r\n      center: true,\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'Guild Cut',\r\n      selector: (c) => c.commissionRate,\r\n      center: true,\r\n      sortable: true,\r\n      cell: (row) => <>{row.commissionRate}%</>,\r\n    },\r\n    {\r\n      name: 'Listing Created',\r\n      selector: (c) => c.listingCreated,\r\n      center: true,\r\n      sortable: true,\r\n      cell: (row) => (\r\n        <>{moment(row.listingCreated).format('Do MMMM YYYY HH:mm:ss')}</>\r\n      ),\r\n    },\r\n    {\r\n      name: '',\r\n      width: '200px',\r\n      displayName: '',\r\n      cell: (row) => (\r\n        <>\r\n          {row.contractType === 0 && (\r\n            <>\r\n              {row.canAction && (\r\n                <Button\r\n                  onClick={() => handleModalOpen(row, 'AcceptScholarOffer')}\r\n                >\r\n                  Accept Offer\r\n                </Button>\r\n              )}\r\n              {row.canCancel && (\r\n                <Button\r\n                  onClick={() => handleModalOpen(row, 'CancelScholarOffer')}\r\n                  className=\"close\"\r\n                >\r\n                  Cancel\r\n                </Button>\r\n              )}\r\n            </>\r\n          )}\r\n          {row.contractType === 1 && (\r\n            <>\r\n              {row.canAction && (\r\n                <Button onClick={() => handleModalOpen(row, 'AcceptWorkOffer')}>\r\n                  Accept Offer\r\n                </Button>\r\n              )}\r\n              {row.canCancel && (\r\n                <Button\r\n                  onClick={() => handleModalOpen(row, 'CancelWorkOffer')}\r\n                  className=\"close\"\r\n                >\r\n                  Cancel\r\n                </Button>\r\n              )}\r\n            </>\r\n          )}\r\n        </>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <>\r\n      <div className=\"contracts\">\r\n        <Grid container>\r\n          <Grid item lg={12} md={12} sm={12} xs={12}>\r\n            <Box>\r\n              <Grid>\r\n                <div className=\"heading\">Open Contracts</div>\r\n                <DataTable\r\n                  columns={columns}\r\n                  data={tavernData?.contracts}\r\n                  pagination\r\n                  theme=\"solarized\"\r\n                  highlightOnHover\r\n                  noDataComponent={\r\n                    <div className=\"noContracts\">\r\n                      There are no active contracts at the moment...\r\n                    </div>\r\n                  }\r\n                />\r\n              </Grid>\r\n            </Box>\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n      <AcceptScholarOfferDialog\r\n        open={openModal === 'AcceptScholarOffer'}\r\n        handleClose={handleModalClose}\r\n        contract={selectedContract}\r\n      />\r\n\r\n      <AcceptWorkOfferDialog\r\n        open={openModal === 'AcceptWorkOffer'}\r\n        handleClose={handleModalClose}\r\n        contract={selectedContract}\r\n      />\r\n\r\n      <SingleActionModal\r\n        open={openModal === 'CancelWorkOffer'}\r\n        handleClose={handleModalClose}\r\n        messageWording=\"Are you sure you want to cancel the work offer?\"\r\n        action={cancelWorkOffer}\r\n        modalTitle=\"Cancel Work Offer\"\r\n        actionWording=\"Cancel Work Offer\"\r\n        actionClass=\"close\"\r\n      />\r\n\r\n      <SingleActionModal\r\n        open={openModal === 'CancelScholarOffer'}\r\n        handleClose={handleModalClose}\r\n        messageWording=\"Are you sure you want to cancel the scholar offer?\"\r\n        action={cancelScholarOffer}\r\n        modalTitle=\"Cancel Scholar Offer\"\r\n        actionWording=\"Cancel Scholar Offer\"\r\n        actionClass=\"close\"\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ContractList;\r\n","import { useState } from 'react';\r\nimport { useWeb3React } from '@web3-react/core';\r\nimport { toast } from 'react-toastify';\r\n\r\n// ** Import Material-Ui Components\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport { Grid, TextField } from '@material-ui/core';\r\nimport { walletAuthFetchWithSigPrompt } from '../../../../helpers/apiFetchWrappers';\r\n\r\nimport PickNFTDialog from './PickNFTDialog';\r\n\r\nconst ScholarOfferDialog = (props) => {\r\n  const { open, handleClose, wipeSignatureAndReRequest } = props;\r\n\r\n  const { account } = useWeb3React();\r\n\r\n  const [commissionRate, setCommissionRate] = useState(null);\r\n\r\n  const [selectedNFT, setSelectedNFT] = useState(null);\r\n  const [openModal, setOpenModal] = useState(false);\r\n\r\n  const handleModalOpen = async () => {\r\n    setOpenModal(true);\r\n  };\r\n\r\n  const handleModalClose = async (event, nft) => {\r\n    if (nft) {\r\n      setSelectedNFT(nft);\r\n    }\r\n    setOpenModal(false);\r\n  };\r\n\r\n  const createScholarOffer = async () => {\r\n    try {\r\n      const scholarOffer = {\r\n        CommissionRate: commissionRate,\r\n        GamingNFTId: selectedNFT.gamingNFTId,\r\n      };\r\n\r\n      const headers = new Headers();\r\n      headers.append('Content-Type', 'application/json');\r\n      headers.append('Accept', 'application/json');\r\n\r\n      const options = {\r\n        mode: 'cors',\r\n        body: JSON.stringify(scholarOffer),\r\n      };\r\n      const scholOfferResp = await walletAuthFetchWithSigPrompt(\r\n        `Tavern/CreateScholarOffer`,\r\n        'POST',\r\n        wipeSignatureAndReRequest,\r\n        account,\r\n        options,\r\n        false,\r\n        headers\r\n      );\r\n\r\n      if (scholOfferResp) {\r\n        if (scholOfferResp.success) {\r\n          toast.success('Created scholar offer');\r\n          handleClose(null, true);\r\n        } else {\r\n          toast.error(scholOfferResp.error);\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.log('failed to create scholar offer contract');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Dialog\r\n        fullWidth\r\n        maxWidth=\"sm\"\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"max-width-dialog-title\"\r\n        className=\"guildModal assignScholarModal scholOfferModal\"\r\n      >\r\n        <DialogTitle\r\n          id=\"max-width-dialog-title\"\r\n          style={{ textAlign: 'center' }}\r\n        >\r\n          Create Tavern Scholar Offer\r\n        </DialogTitle>\r\n        <DialogContent className=\"body\">\r\n          <Grid container>\r\n            <Grid item container lg={12} md={12} sm={12} xs={12}>\r\n              <Grid\r\n                item\r\n                container\r\n                lg={8}\r\n                md={8}\r\n                sm={12}\r\n                xs={12}\r\n                className=\"nftDetails\"\r\n              >\r\n                {selectedNFT && (\r\n                  <>\r\n                    <Grid item lg={2} md={2} sm={2} xs={2} className=\"image\">\r\n                      <img\r\n                        src={`${process.env.REACT_APP_API_URL}/${selectedNFT.image}`}\r\n                        alt=\"nftImg\"\r\n                        style={{ width: '100%' }}\r\n                      />\r\n                    </Grid>\r\n                    <Grid\r\n                      item\r\n                      container\r\n                      lg={10}\r\n                      md={10}\r\n                      sm={10}\r\n                      xs={10}\r\n                      className=\"nftInfo\"\r\n                    >\r\n                      <Grid\r\n                        item\r\n                        lg={12}\r\n                        md={12}\r\n                        sm={12}\r\n                        xs={12}\r\n                        className=\"name\"\r\n                      >\r\n                        {selectedNFT.name}\r\n                      </Grid>\r\n                      <Grid\r\n                        item\r\n                        container\r\n                        lg={12}\r\n                        md={12}\r\n                        sm={12}\r\n                        xs={12}\r\n                        className=\"scholarSlots\"\r\n                      >\r\n                        <i className=\"fa-solid fa-user-graduate icon\" />\r\n                        Scholar Slots {selectedNFT.scholarSlots ?? 0} /{' '}\r\n                        {selectedNFT.maxScholarSlots}\r\n                      </Grid>\r\n                    </Grid>\r\n                  </>\r\n                )}\r\n                {!selectedNFT && <>No NFT Selected</>}\r\n              </Grid>\r\n              <Grid item lg={4} md={4} sm={12} xs={12} className=\"nftAction\">\r\n                {selectedNFT && (\r\n                  <Button onClick={handleModalOpen}>Change NFT</Button>\r\n                )}\r\n                {!selectedNFT && (\r\n                  <Button onClick={handleModalOpen}>Select NFT</Button>\r\n                )}\r\n              </Grid>\r\n            </Grid>\r\n\r\n            <Grid item lg={12} md={12} sm={12} xs={12}>\r\n              <TextField\r\n                autoFocus\r\n                margin=\"dense\"\r\n                label=\"Commission Split\"\r\n                type=\"number\"\r\n                value={commissionRate}\r\n                onChange={(e) => setCommissionRate(e.target.value)}\r\n              />\r\n            </Grid>\r\n\r\n            <Grid item lg={12} md={12} sm={12} xs={12} className=\"offerDetails\">\r\n              This means for every 100 HiFi the scholar earns:\r\n              <ul>\r\n                <li>The NFT owner will get: {commissionRate} HiFi</li>\r\n                <li>The scholar will get: {100 - commissionRate} HiFi</li>\r\n              </ul>\r\n            </Grid>\r\n          </Grid>\r\n        </DialogContent>\r\n        <DialogActions className=\"actions\">\r\n          {!selectedNFT && <span>Please select an NFT</span>}\r\n          {selectedNFT &&\r\n            commissionRate &&\r\n            commissionRate >= 0 &&\r\n            commissionRate <= 100 && (\r\n              <Button onClick={createScholarOffer} color=\"primary\">\r\n                Create Offer\r\n              </Button>\r\n            )}\r\n\r\n          <Button onClick={handleClose} color=\"primary\" className=\"close\">\r\n            Close\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n\r\n      <PickNFTDialog open={openModal} handleClose={handleModalClose} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ScholarOfferDialog;\r\n","import { useState } from 'react';\r\nimport { useWeb3React } from '@web3-react/core';\r\nimport { toast } from 'react-toastify';\r\n\r\n// ** Import Material-Ui Components\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport { Grid, TextField } from '@material-ui/core';\r\nimport { walletAuthFetchWithSigPrompt } from '../../../../helpers/apiFetchWrappers';\r\n\r\nconst WorkOfferDialog = (props) => {\r\n  const { open, handleClose, wipeSignatureAndReRequest } = props;\r\n\r\n  const { account } = useWeb3React();\r\n\r\n  const [commissionRate, setCommissionRate] = useState(50);\r\n\r\n  const makeWorkOffer = async () => {\r\n    try {\r\n      const scholarOffer = {\r\n        CommissionRate: commissionRate,\r\n      };\r\n\r\n      const headers = new Headers();\r\n      headers.append('Content-Type', 'application/json');\r\n      headers.append('Accept', 'application/json');\r\n\r\n      const options = {\r\n        mode: 'cors',\r\n        body: JSON.stringify(scholarOffer),\r\n      };\r\n      const scholOfferResp = await walletAuthFetchWithSigPrompt(\r\n        `Tavern/CreateWorkOffer`,\r\n        'POST',\r\n        wipeSignatureAndReRequest,\r\n        account,\r\n        options,\r\n        false,\r\n        headers\r\n      );\r\n\r\n      if (scholOfferResp) {\r\n        if (scholOfferResp.success) {\r\n          toast.success('Created work offer');\r\n          handleClose(null, true);\r\n        } else {\r\n          toast.error(scholOfferResp.error);\r\n          handleClose(null, false);\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.log('Failed to create work offer');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Dialog\r\n      fullWidth\r\n      maxWidth=\"sm\"\r\n      open={open}\r\n      onClose={handleClose}\r\n      aria-labelledby=\"max-width-dialog-title\"\r\n      className=\"guildManagementModal assignScholarModal scholOfferModal\"\r\n    >\r\n      <DialogTitle id=\"max-width-dialog-title\" style={{ textAlign: 'center' }}>\r\n        Create Work Order\r\n      </DialogTitle>\r\n      <DialogContent className=\"body\">\r\n        <Grid container>\r\n          <Grid item lg={12} md={12} sm={12} xs={12}>\r\n            <TextField\r\n              autoFocus\r\n              margin=\"dense\"\r\n              label=\"Commission Split\"\r\n              type=\"number\"\r\n              value={commissionRate}\r\n              onChange={(e) => setCommissionRate(e.target.value)}\r\n            />\r\n          </Grid>\r\n          <Grid item lg={12} md={12} sm={12} xs={12} className=\"offerDetails\">\r\n            <p>\r\n              This means for every 100 HiFi you earn:\r\n              <ul>\r\n                <li>The NFT owner will get: {commissionRate} HiFi</li>\r\n                <li>You will receive: {100 - commissionRate} HiFi</li>\r\n              </ul>\r\n            </p>\r\n          </Grid>\r\n        </Grid>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={makeWorkOffer} color=\"primary\">\r\n          Create Work Offer\r\n        </Button>\r\n        <Button onClick={handleClose} color=\"primary\" className=\"close\">\r\n          Close\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default WorkOfferDialog;\r\n","import { useState } from 'react';\r\nimport { isMobile } from 'react-device-detect';\r\n\r\nimport { Button, Grid } from '@material-ui/core';\r\nimport ContractList from './ContractList';\r\nimport ScholarOfferDialog from './Dialogs/ScholarOfferDialog';\r\nimport WorkOfferDialog from './Dialogs/WorkOfferDialog';\r\n\r\nconst Tavern = (props) => {\r\n  const { wipeSignatureAndReRequest } = props;\r\n\r\n  const [openModal, setOpenModal] = useState(null);\r\n  const [refreshList, setRefreshList] = useState(false);\r\n\r\n  const [canCreateScholarOffer, setCanCreateScholarOffer] = useState(false);\r\n  const [canCreateWorkOffer, setCanCreateWorkOffer] = useState(false);\r\n\r\n  const handleModalOpen = async (modalName) => {\r\n    setOpenModal(modalName);\r\n  };\r\n\r\n  const handleModalClose = async () => {\r\n    setOpenModal(null);\r\n    setRefreshList(true);\r\n  };\r\n\r\n  return (\r\n    <div className={`tavern ${isMobile ? 'mobile' : ''}`}>\r\n      <Grid container>\r\n        <Grid item lg={6} md={6} sm={6} xs={6} className=\"tavernAction\">\r\n          <Button\r\n            onClick={() => handleModalOpen('ScholarOffer')}\r\n            disabled={!canCreateScholarOffer}\r\n          >\r\n            <i className=\"fa-solid fa-user-graduate icon\" />\r\n            Create scholar offer\r\n          </Button>\r\n        </Grid>\r\n        <Grid item lg={6} md={6} sm={6} xs={6} className=\"tavernAction\">\r\n          <Button\r\n            onClick={() => handleModalOpen('WorkOfferOffer')}\r\n            disabled={!canCreateWorkOffer}\r\n          >\r\n            <i className=\"fa-solid fa-briefcase icon\" />\r\n            Create work offer\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n      <ContractList\r\n        wipeSignatureAndReRequest={wipeSignatureAndReRequest}\r\n        refreshList={refreshList}\r\n        setRefreshList={setRefreshList}\r\n        setCanCreateScholarOffer={setCanCreateScholarOffer}\r\n        setCanCreateWorkOffer={setCanCreateWorkOffer}\r\n      />\r\n\r\n      <ScholarOfferDialog\r\n        open={openModal === 'ScholarOffer'}\r\n        handleClose={handleModalClose}\r\n      />\r\n      <WorkOfferDialog\r\n        open={openModal === 'WorkOfferOffer'}\r\n        handleClose={handleModalClose}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Tavern;\r\n"],"sourceRoot":""}